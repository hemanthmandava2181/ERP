<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Finance">

	<!-- Insert liabilities data -->
	<insert id="addliabilitydata" parameterType="map">
		insert into finance.equity_liabilities_mst(liabilities_subhead,liabilities_head)
		values(#{p.liabilities_subhead},#{p.liabilities_head});
	</insert>

	<!-- getting liabilities heads -->
	<select id="getliabilitiesheads" resultType="map">
		SELECT distinct id,liabilities_head as liabilityhead from finance.liabilities_group_mst order by id;
	</select>
         
	<!-- getting all liabilities in table -->
	<select id="getallliabilities" resultType="Finance">
		select distinct
		a.liabilities_subhead,b.liabilities_head as liabilitieshead from
		(select liabilities_subhead,liabilities_head from
		finance.equity_liabilities_mst) a
		inner join (select * from finance.liabilities_group_mst) b on
		(a.liabilities_head = b.id)
	</select>
	
	<!-- getting all Email Settings in table -->
	<select id="getallemailSettingsdata" resultType="Finance">
		select distinct id,(case when claim_type = 1 then 'Claim Advance' when claim_type = 2 then 'Imprest Advance' when 
	claim_type = 3 then 'Claim Reimbursement' when claim_type = 4 then 'Imprest Reimbursement' when 
	claim_type = 5 then 'Others' end) as claimtypename,hours from finance.claim_management_email_settings
	</select>

	<!-- creating tax sections -->
	<select id="getAllCreateSections" resultType="map">
		SELECT distinct id,section_name as tax_section_name,max_limit,(case when
		status='TRUE' then 'Active'
		when status='FALSE' then 'In-Active' end)
		as status from finance.income_tax_sections_mst order by id
	</select>

	<select id="getBySection" resultType="Finance">
		SELECT id,section_name as tax_section_name1,max_limit as max_limit1,status
		from finance.income_tax_sections_mst
		WHERE id = #{id} ;
	</select>

	<update id="updateSectionData" parameterType="map">
		update
		finance.income_tax_sections_mst SET section_name =
		#{p.tax_section_name1},max_limit=#{p.max_limit1},
		status=#{p.status}
		WHERE id=#{p.id};
	</update>
	
	<update id="updateJE" parameterType="map">
		update
		finance.income_tax_sections_mst SET section_name =
		#{p.tax_section_name1},max_limit=#{p.max_limit1},
		status=#{p.status}
		WHERE id=#{p.id};
	</update>          

	<!-- Section Details -->
	<insert id="saveSectionDetails" parameterType="map">
		INSERT INTO finance.income_tax_sections_mst(section_name,max_limit)
		VALUES (#{p.tax_section_name},#{p.max_limit});

	</insert>

	<!-- Tax Details -->
	<insert id="saveTaxDetails" parameterType="map">
		INSERT INTO finance.tax_sections_mst(section_name)
		VALUES (#{p.section_name});

	</insert>
	<select id="getByTax" resultType="Finance">
		SELECT distinct id,section_name as section_name1,status from finance.tax_sections_mst
		WHERE id = #{id} ;
	</select>
	<select id="getAllSections" resultType="map">
		SELECT distinct id,section_name,(case when status='TRUE' then 'Active'
		when
		status='FALSE' then 'Inactive' end) as status from
		finance.tax_sections_mst order by id
	</select>
	<update id="updateTaxData" parameterType="map">
		update
		finance.tax_sections_mst SET section_name = #{p.section_name1},
		status=#{p.status}
		WHERE id=#{p.id};
	</update>


	<!-- Inserting expense account data -->
	<insert id="addexpenseaccount" parameterType="map">
		insert into finance.expense_accounts(expense_account_name)
		values(#{p.expense_account_name});
	</insert>

	<!-- getting all expense accounts data in table -->
	<select id="getalllexpenseaccounts" resultType="Finance">
		select distinct expense_account_name,status from finance.expense_accounts;
	</select>

	<!-- getting data based on expense account name -->
	<select id="getexpenseaccountdetails" resultType="Finance">
		SELECT
		expense_account_name,status from finance.expense_accounts WHERE
		expense_account_name = #{expense_account_name};
	</select>

	<!-- update data based on expense account name -->
	<update id="updateexpenseaccount" parameterType="map">
		update finance.expense_accounts SET status=#{p.status} WHERE
		expense_account_name=#{p.expense_account_name};
	</update>

	<!-- Inserting cost center data -->
	<insert id="createcostcenter" parameterType="map">
		insert into hrms.cost_center_mst(name,address,location)
		values(#{p.name},#{p.address},#{p.location});
	</insert>
<!-- 
	<select id="getsubmittedjelistdata" resultType="Finance">
		select distinct
		a.voucher_number,a.entrytype_name,a.voucher_date,b.project_name,c.workorder_id,e.account_name,f.name,d.description,
		a.debit_amount,a.credit_amount from
		(select id,voucher_number as voucher_number,project,work_order,debit_amount,credit_amount,(case
		when entry_type = 1 then 'Journal' when entry_type = 2 then 'Invoice'
		when entry_type = 3 then 'Payment Entry' when entry_type = 4 then
		'Payment Receipt' when entry_type = 5 then 'Contra'
		when entry_type = 6 then 'Payroll Entry' when entry_type = 7 then 'Claim'
		when entry_type = 8 then 'Imprest'
		when entry_type = 9 then 'Receivable' end) as entrytype_name,date as
		voucher_date from finance.journal_entry_header
		where voucher_number = #{voucher_number}) a inner join (select * from
		procurements.createproject_mst) b on (a.project = b.id)
		inner join (select * from finance.workorder) c on (c.id = a.work_order) inner join
		(select journal_entry_header,gl_account,cost_center,description from finance.journal_entry_details) d
		on (d.journal_entry_header = a.id) inner join
		(SELECT id,account_name as account_name from finance.gl_group_accounts_mst) e on (e.id = d.gl_account) inner join
		(select id,name from hrms.cost_center_mst) f on (f.id = d.cost_center)
	</select> -->
	
	
	<!-- getting all expense accounts data in table -->
	<select id="getalllcostcenters" resultType="Finance">
		select distinct name,address,location,status from hrms.cost_center_mst;
	</select>

	<!-- getting cost center data based on cost center name -->
	<select id="getcostcenterdata" resultType="Finance">
		SELECT
		name,address,location,status from hrms.cost_center_mst WHERE name =
		#{name};
	</select>

	<!-- updating cost center data based on cost center name -->
	<update id="updatecostcenter" parameterType="map">
		update hrms.cost_center_mst SET name =
		#{p.name},address=#{p.address},location=#{p.location},status=#{p.status}
		WHERE name=#{p.name};
	</update>


	<!-- Inserting tax group data -->
	<insert id="createtaxgroup" parameterType="map">
		insert into finance.tax_groups(tax_group_name) values(#{p.tax_group_name});
	</insert>

	<!-- getting all expense accounts data in table -->
	<select id="getallltaxgroups" resultType="Finance">
		select distinct tax_group_name,status from finance.tax_groups;
	</select>

	<!-- getting tax group data based on tax group name -->
	<select id="gettaxgroupdata" resultType="Finance">
		SELECT
		tax_group_name,status from finance.tax_groups WHERE tax_group_name =
		#{tax_group_name};
	</select>

	<!-- updating tax group data based on tax group name -->
	<update id="updatetaxgroup" parameterType="map">
		update finance.tax_groups SET status=#{p.status} WHERE
		tax_group_name=#{p.tax_group_name};
	</update>


	<!-- create nature of service -->
	<insert id="createnatureofservice" parameterType="map">
		insert into operations.vender_service_nature_mst(service_name)
		values(#{p.service_name});
	</insert>

	<!-- getting all nature of service data in table -->
	<select id="getalllnatureofservices" resultType="Finance">
		select
		service_name,status from operations.vender_service_nature_mst;
	</select>

	<!-- getting all Reimbursement data in table -->
	<select id="getallReimbursementdata" resultType="Finance">
	select distinct a.id,a.cities_incidental,a.other_incidental,a.stay_metro,a.stay_non_metro,a.mobile_benefits,a.internet_benefits,
		a.location_name,b.description,c.travel from
		(select id,cader,cities_incidental,other_incidental,stay_metro,stay_non_metro,mobile_benefits,internet_benefits,
		(case when location = 1 then 'International' when location = 2 then 'Within_AP_and_T' when 
		location = 3 then 'Outside_AP' end) location_name,local_conveyance from finance.claim_reimbursment_policy) a inner join
		(select id,description from hrms.cader_mst) b on (b.id = a.cader) inner join 
		(select rem_id, travel as travel from finance.claim_travel_policy) c on (a.local_conveyance = c.rem_id)
	</select>

	<!-- getting tax group data based on tax group name -->
	<select id="getnatureofservice" resultType="Finance">
		SELECT
		service_name,status from operations.vender_service_nature_mst WHERE service_name
		= #{service_name};
	</select>
	
	<!-- getting reimbursement data based on tax group name -->
	<select id="getReimbursementdata" resultType="Finance">
	select distinct id,cader as caderid,cities_incidental as citiesincidental,other_incidental as otherincidental,stay_metro as staymetro,
	stay_non_metro as stay_nonmetro,mobile_benefits as mobilebenefits,internet_benefits as internetbenefits,
	location as locationid,local_conveyance as localconveyance from finance.claim_reimbursment_policy where id = #{id}
	</select>
	
	<!-- getting Email settings data based on id -->    
	<select id="getemailsetingsdata" resultType="Finance">
		SELECT id,claim_type as claimtype,hours as hour from finance.claim_management_email_settings WHERE id = #{id};
	</select>
	
	
	<!-- updating Email settings data based on id -->
	<update id="updateEmailsettings" parameterType="map">
		update finance.claim_management_email_settings SET claim_type=#{p.claimtype},hours = #{p.hour} WHERE
		id=#{p.id};   
	</update>
	
	<!-- updating reimbursement data based on id -->
	<update id="updateReimbursements" parameterType="map">
		update finance.claim_reimbursment_policy SET cities_incidental=#{p.citiesincidental},other_incidental = #{p.otherincidental},
		stay_metro = #{p.staymetro},stay_non_metro = #{p.stay_nonmetro},mobile_benefits = #{p.mobilebenefits},internet_benefits = #{p.internetbenefits},
		location = #{p.locationid},cader = #{p.caderid},local_conveyance=#{p.localconveyance} WHERE
		id=#{p.id};   
	</update>

	<!-- updating nature of service data based on service name -->
	<update id="updatenatureofservice" parameterType="map">
		update operations.vender_service_nature_mst SET status=#{p.status} WHERE
		service_name=#{p.service_name};
	</update>

	<!-- getting tax groups in drop down -->
	<select id="getTaxgroups" resultType="map">
		SELECT distinct id,tax_group_name as tax_group from finance.tax_groups order by id;
	</select>

	<!-- getting bank account names in drop down -->
	<select id="getBankaccountnames" resultType="map">
		SELECT distinct id,concat(bank_name,' ',account_number) as bank_account from
		finance.bank_account_details order by id;
	</select>

	<!-- getting service type in drop down -->
	<select id="getservicetype" resultType="map">
		SELECT distinct id,
		service_name as service_name from operations.vender_service_nature_mst;
	</select>

	<!-- getting gl account names in drop down -->
		<select id="getTaxaccountnames" resultType="map">
		SELECT distinct id,account_name as account_name from finance.gl_group_accounts_mst order by id;
	</select>


	<!-- creating tax account -->
	<insert id="createtaxaccount" parameterType="map">
		insert into
		finance.tax_accounts(tax_group,account_nature,account_type,gl_account,status)
		values(#{p.tax_groupid},#{p.account_nature},#{p.account_type},#{p.gl_accountid},0);
	</insert>
	<!-- getting all tax account data to table -->
	<select id="getallltaxaccounts" resultType="Finance">
		select distinct a.id,a.accountnature_name,a.accounttype_name,b.tax_group_name as
		tax_group_name,c.account_name as account_name,a.approvestatus from
		(select (case when account_nature = 1 then 'Expenditure' when
		account_nature = 2 then 'Income' when account_nature = 3 then 'Assets'
		when account_nature = 4 then 'Liability' end) as accountnature_name,
		(case when account_type = 1 then 'DEBIT' when account_type = 2 then
		'CREDIT' end) as accounttype_name,tax_group,gl_account,(case when
		status = 0 then 'Active' when status = 1 then 'In-Active' end) as
		approvestatus,id from finance.tax_accounts order by id) a inner join
		(select * from finance.tax_groups) b on (a.tax_group = b.id)
		inner join (select * from finance.gl_group_accounts_mst) c on (c.id =
		a.gl_account);
	</select>

	<!-- getting tax account data based on tax account name -->
<select id="gettaxaccountdata" resultType="Finance">
		SELECT distinct
		id,account_nature as account_nature,tax_group as
		tax_groupid,account_type as account_type,gl_account as
		gl_accountid,status as status_of_person from finance.tax_accounts
		WHERE id = #{id};
	</select>

	<!-- updating tax account data -->
	<update id="updatetaxaccount" parameterType="map">
		update finance.tax_accounts SET status=#{p.status_of_person} WHERE
		id=#{p.id};
	</update>

	<!-- getting tax section names in drop down -->
	<select id="getTaxsectionnames" resultType="map">
		SELECT distinct id,
		section_name as section_name from finance.tax_sections_mst order by
		id;
	</select>

	<!-- creating tax mapping -->
	<insert id="createtaxmapping" parameterType="map">
		insert into
		finance.service_tax_account_mapping(service,vendor_type,tax_group,tax_account,tax_section,tax_rate,supply_type,
		effective_from,effective_to)
		values(#{p.serviceid},#{p.vendortype},#{p.taxgroup},#{p.gl_accountid},#{p.taxsection},#{p.taxrate},
		#{p.supplytype},#{p.effectivefrom},#{p.effectiveto});
	</insert>

	<!-- getting all tax mapping data in table -->
	<select id="getallltaxmappings" resultType="Finance">
		select
		a.id,a.tax_rate,a.effective_from,a.effective_to,a.status,a.vendor_type,a.supply_type,b.tax_group_name,c.account_name,d.section_name,
		e.service_name from
		(select id,service,(case when vendor_type = 1 then 'Individual'
		when vendor_type = 2 then 'HUF' when vendor_type = 3 then 'Partnership
		Firm' when vendor_type = 4 then 'Association of Persons'
		when
		vendor_type = 5 then 'Others' end) as
		vendor_type,tax_group,tax_account,tax_section,tax_rate,(case when
		supply_type = 1 then 'Inter' when supply_type = 2 then 'Intra' end) as
		supply_type,
		effective_from,effective_to,status from
		finance.service_tax_account_mapping) a
		inner join (select * from
		finance.tax_groups) b on (b.id = a.tax_group)
		inner join (select * from finance.gl_group_accounts_mst) c on
		(a.tax_account = c.id)
		inner join (select * from
		finance.tax_sections_mst) d on (d.id = a.tax_section)
		inner join
		(select * from operations.vender_service_nature_mst) e on (e.id = a.service)

	</select>

	<!-- getting data in pop up based on id -->
	<select id="gettaxmappingdata" resultType="Finance">
		SELECT distinct id,service as
		service,vendor_type as vendor_typeid,tax_group as
		tax_groupid,tax_account as tax_account,tax_section as
		tax_section,tax_rate as tax_rate,supply_type as supply_typeid,
		effective_from :: date as effective_from,effective_to as effective_to
		from finance.service_tax_account_mapping WHERE id = #{id};
	</select>


	<!-- updating tax mapping based on id -->
	<update id="updatetaxmapping" parameterType="map">
		update finance.service_tax_account_mapping SET service =
		#{p.service},vendor_type = #{p.vendor_typeid},tax_group =
		#{p.tax_groupid},
		tax_account = #{p.tax_account},tax_section =
		#{p.tax_section},tax_rate = #{p.tax_rate},supply_type =
		#{p.supply_typeid},effective_from = #{p.effective_from},effective_to =
		#{p.effective_to}
		WHERE id=#{p.id};
	</update>

	<!-- deleting tax mapping data based on id -->
	<delete id="deletetaxmapping" parameterType="java.lang.Integer">
		delete from
		finance.service_tax_account_mapping where id = #{id};
	</delete>

		<!-- creating local conveyance rate -->
	<insert id="createlocalconveyancerate" parameterType="map">
		insert into finance.local_conveyance_rates(type_of_vehicle,rate_per_km)
		values(#{p.type_of_vehicle},#{p.rate_per_km});
	</insert>

	<!-- getting local conveyance data in table -->
	<select id="getallllocalconveyancesdata" resultType="Finance">
		select
		id,(case when type_of_vehicle = 1 then 'Own Car Petrol' when
		type_of_vehicle = 2 then 'Own Car Diesel'
		when type_of_vehicle = 3 then 'Scooter' end) as vehicle_name,rate_per_km
		as rate_perkm from finance.local_conveyance_rates;
	</select>

	<!-- getting local conveyance data based on id -->
	<select id="getlocalconveyancedata" resultType="Finance">
		SELECT distinct id,type_of_vehicle as type_ofvehicle,rate_per_km as rate_km from
		finance.local_conveyance_rates WHERE id = #{id};
	</select>

	<!-- updating local conveyance data -->
	<update id="updatelocalconveyancedata" parameterType="map">
		update finance.local_conveyance_rates SET type_of_vehicle =
		#{p.type_ofvehicle},rate_per_km = #{p.rate_km} WHERE id=#{p.id};
	</update>


	<!-- creating vehicle type -->
	<insert id="createvehicletype" parameterType="map">
		insert into finance.vehicle_type (cader,grade,designation,vehicle_name)
		values(#{p.cader},#{p.grade},#{p.designation},#{p.vehicle_name});
	</insert>

	<!-- getting all vehicle types to table -->
	<select id="getalllvehicletypessdata" resultType="Finance">
		select distinct
		a.id,a.vehicle_name,b.description,c.designation_name,d.grade_name from
		(select id,cader,grade,designation,vehicle_name from
		finance.vehicle_type) a inner join (select * from hrms.cader_mst) b on
		(b.id = a.cader)
		inner join (select * from hrms.designation_mst) c on (c.id = a.designation)
		inner join (select * from hrms.grades_mst) d on (d.id = a.grade)
	</select>

	<!-- getting local conveyance data based on id -->
	<select id="getvehicletypedatadata" resultType="Finance">
		select distinct id,cader
		as caderid,grade as gradeid,designation as designationid,vehicle_name
		as vehiclename from finance.vehicle_type where id = #{id}
	</select>

	<!-- updating vehicle type data -->
	<update id="updatevehicletypedata" parameterType="map">
		update finance.vehicle_type SET cader = #{p.caderid},grade =
		#{p.gradeid},designation = #{p.designationid},vehicle_name =
		#{p.vehiclename} WHERE id=#{p.id};
	</update>

	<!-- create email settings -->
	<insert id="createemailsettings" parameterType="map">
		insert into finance.claim_management_email_settings (claim_type,hours)
		values(#{p.claim_type},#{p.hours});
	</insert>

	<!-- creating vehicle registration -->
	<insert id="createvehicleRegistration" parameterType="map">
		insert into finance.claim_management_email_settings (claim_type,hours)
		values(#{p.claim_type},#{p.hours});
	</insert>

	<!-- getting travel data in drop down -->
	<select id="gettravel" resultType="map">
		SELECT distinct rem_id, travel
		as travel from finance.claim_travel_policy order by rem_id;
	</select>

	<!-- creating reimbursement policy -->
	<insert id="createreimbursementpolicy" parameterType="map">
		insert into finance.claim_reimbursment_policy
		(cader,cities_incidental,other_incidental,stay_metro,stay_non_metro,
		mobile_benefits,internet_benefits,local_conveyance,location)
		values(#{p.cader},#{p.cities_incidental},#{p.other_incidental},#{p.stay_metro},#{p.stay_non_metro},#{p.mobile_benefits},
		#{p.internet_benefits},#{p.local_conveyance},#{p.location_id});
	</insert>

	<!-- creating claim advance new -->
	<select id="getYear" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(year
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as year;
	</select>

	<select id="getCount" resultType="java.lang.Integer">
		SELECT count(id)+1 as count
		from finance.claim_advance where claim_advance_id is NOT NULL;
	</select>

	<insert id="submitclaimadvance" parameterType="map">
		insert into finance.claim_advance
		(purpose,description,from_date,to_date,amount,claim_advance_id,cost_center,project,document,status,financial_year)
		values(#{p.purpose},#{p.description},#{p.from_date},#{p.to_date},#{p.amount},
		('APCA' || '' || #{year} || '' ||lpad(CAST( #{id} AS character varying
		),4,'0')),#{p.cost_center},#{p.project},#{p.image},0,#{p.financialyear});
	</insert> 

	<!-- getting financial year drop down -->
	<select id="getfinancialyears" resultType="map">
		SELECT distinct
		yearid, years as years from procurements.years_mst;
	</select>


	<!-- getting Sectors drop down -->
	<select id="getsectors" resultType="map">
		SELECT distinct id as sector_id,sector_name as sector_name from procurements.createsector_mst order by id;
	</select>
	<!-- getting projects drop down -->
	<select id="getprojects" resultType="map">
		SELECT distinct id as project,project_name as project_name from procurements.createproject_mst order by id;
	</select>

	<!-- creating claim advance existing -->
	<!-- <insert id="submitexistingclaimadvance" parameterType="map"> insert 
		into finance.claim_advance (purpose,description,from_date,to_date,amount,cost_center,existed_claim_id,financial_year) 
		values(#{p.purpose},#{p.description},#{p.from_date},#{p.to_date},#{p.amount},#{p.cost_center},#{p.existed_claim_id}, 
		#{p.financial_year}); </insert> -->

	<!-- getting claim advance ids drop down -->
	<select id="getclaimadvanceids" resultType="map">
		SELECT distinct id,
		claim_advance_id as claim_advance_id from finance.claim_advance where
		claim_advance_id is NOT NULL order by id ;
	</select>

	<!-- inserting bill submission data -->
	<select id="getCount1" resultType="java.lang.Integer">
		SELECT count(id)+1 as count
		from finance.claim_reimbursment;
	</select>

	<insert id="suubmitbillsubmission" parameterType="map">
		insert into finance.claim_reimbursment
		(claim_reimbursement_id,sector,project,from_date,to_date,purpose,description,cost_center,claim_advance_id,status)
		values(('APCR' || '' || 2021 || '' ||lpad(CAST( #{id} AS character
		varying
		),4,'0')),#{p.sector},#{p.project},#{p.from_date},#{p.to_date},#{p.purpose},#{p.description},
		#{p.cost_center},#{p.claim_advanceid},0);
	</insert>
	
	
	<!-- getting claim reimbursement id -->
	<select id="getclaimid"
		resultType="java.lang.Integer">
		SELECT max(id) as claim_id from finance.claim_reimbursment;
	</select>

	<insert id="suubmitbillsubmissiondetails" parameterType="map">
		insert into finance.claim_reimbursment_details
		(claim_id,gl_account,name,km,local_conveyance_types,amount,claim_type,details_date,location)
		values(#{claim_id},#{p.gl_account},#{p.name},#{p.km},#{p.local_conveyance_types},#{p.amount},#{p.claim_type},
		#{p.details_date},#{p.location_id});
	</insert>

	<!-- getting nature of services drop down -->
	<select id="getNatureofservices" resultType="map">
		SELECT distinct id,
		service_name as service_name from operations.vender_service_nature_mst where
		status = 'TRUE' order by id;
	</select>

	<!-- getting states drop down -->
	<select id="getStates" resultType="map">
		SELECT distinct id, name as
		name from finance.states order by id;
	</select>

	<!-- creating customer -->
	<select id="getCount2" resultType="java.lang.Integer">
		SELECT count(id)+1 as count
		from finance.customer;
	</select>

	<insert id="customercreation" parameterType="map">
		insert into finance.customer
		(customer_id,name,phone_number,mobile_number,email,web_site,address,status_of_person,pan_no,
		service_tax_no,status_of_person_service_tax,gst_no,service_tax,tan_no,account_no,bank_name,ifsc,branch,contact_person_name,
		city,district,pincode,contact_person_designation,contact_person_mobile,contact_person_mail,registration_no,date_of_registration,
		place_of_registration,experience,annual_turnover,nsda_affilcation,ssc_affilation,registering_authority,nsda_number,ssc_number,
		gst_registration,gst_reg_date,state,nature_of_service)
		values(('CR' || '' || 2021 || '' ||lpad(CAST( #{id} AS character varying
		),4,'0')),#{p.name},#{p.phone_number},#{p.mobile_number},
		#{p.email},#{p.web_site},#{p.address},#{p.status_of_person},#{p.pan_no},#{p.service_tax_no},#{p.status_of_person_service_tax},
		#{p.gst_no},#{p.service_tax},#{p.tan_no},#{p.account_no},#{p.bank_name},#{p.ifsc},#{p.branch},#{p.contact_person_name},#{p.city},
		#{p.district},#{p.pincode},#{p.contact_person_designation},#{p.contact_person_mobile},#{p.contact_person_mail},#{p.registration_no},
		#{p.date_of_registration},#{p.place_of_registration},#{p.experience},#{p.annual_turnover},#{p.nsda_affilcation},#{p.ssc_affilation},
		#{p.registering_authority},#{p.nsda_number},#{p.ssc_number},#{p.gst_registration},#{p.gst_reg_date},#{p.state},#{p.nature_of_service});
	</insert>


	<!-- getting all customer details in table -->
	<select id="getalllCustomerDetails" resultType="Finance">
		select
		a.customer_id,a.name,a.address,a.gst_no,a.account_no,a.bank_name,a.ifsc,a.branch,a.contact_person_mobile,
		a.contact_person_mail,a.gstregistration,b.name as state_name,a.status
		from
		(select customer_id as customer_id,name as name,address as
		address,gst_no as gst_no,account_no as account_no,bank_name as
		bank_name,
		ifsc as ifsc,branch as branch,contact_person_mobile as
		contact_person_mobile,contact_person_mail as contact_person_mail,
		(case when gst_registration = 1 then 'Yes' when gst_registration = 2
		then 'No' end) as gstregistration,state,status as status
		from finance.customer) a inner join (select * from finance.states) b on
		(a.state = b.id)
	</select>

	<!-- getting customer data to pop up based on customer_id -->
	<select id="getCustomerdata" resultType="Finance">
		select
		customer_id,name,phone_number,mobile_number,email,web_site,address,status_of_person,pan_no,
		service_tax_no,status_of_person_service_tax,gst_no,service_tax,tan_no,account_no,bank_name,ifsc,branch,contact_person_name,
		city,district,pincode,contact_person_designation,contact_person_mobile,contact_person_mail,registration_no,date_of_registration,
		place_of_registration,experience,annual_turnover,nsda_affilcation,ssc_affilation,registering_authority,nsda_number,ssc_number,
		gst_registration,gst_reg_date :: date,state,nature_of_service from
		finance.customer where customer_id = #{customer_id};
	</select>

	<!-- updating customer data -->
	<update id="UpdateCustomerdata" parameterType="map">
		update finance.customer SET name = #{p.name},phone_number =
		#{p.phone_number},mobile_number = #{p.mobile_number},email =
		#{p.email},
		web_site = #{p.web_site},address =
		#{p.address},status_of_person = #{p.status_of_person},pan_no =
		#{p.pan_no},service_tax_no = #{p.service_tax_no},
		status_of_person_service_tax =
		#{p.status_of_person_service_tax},gst_no = #{p.gst_no},service_tax =
		#{p.service_tax},tan_no = #{p.tan_no},
		account_no =
		#{p.account_no},bank_name = #{p.bank_name},ifsc = #{p.ifsc},branch =
		#{p.branch},contact_person_name = #{p.contact_person_name},
		city =
		#{p.city},district = #{p.district},pincode =
		#{p.pincode},contact_person_designation =
		#{p.contact_person_designation},
		contact_person_mobile =
		#{p.contact_person_mobile},contact_person_mail =
		#{p.contact_person_mail},registration_no = #{p.registration_no},
		date_of_registration = #{p.date_of_registration},place_of_registration
		= #{p.place_of_registration},experience = #{p.experience},
		annual_turnover = #{p.annual_turnover},nsda_affilcation =
		#{p.nsda_affilcation},ssc_affilation = #{p.ssc_affilation},
		registering_authority = #{p.registering_authority},nsda_number =
		#{p.nsda_number},ssc_number = #{p.ssc_number},gst_registration =
		#{p.gst_registration},
		nature_of_service = #{p.nature_of_service}
		WHERE
		customer_id=#{p.customer_id};
	</update>

	<!-- in activating customer -->
	<update id="inactivecustomer" parameterType="map">
		update finance.customer set status = 'false' where customer_id =
		#{p.customer_id}
	</update>                     
   
	<!-- getting customers drop down -->
		<select id="getCustomers" resultType="map">
		SELECT distinct id, name as
		name from finance.customer order by id;
	</select>

	<!-- getting programs drop down -->
	<select id="getPrograms" resultType="map">
		SELECT distinct id as programid,program_name as programname from procurements.createprogram_mst order by id;
	</select>     

	<!-- getting services drop down -->
<select id="getServices" resultType="map">
		SELECT distinct id as serviceid,
		service_name as servicename from operations.vender_service_nature_mst order by id;
	</select>

	<!-- getting schemes drop down -->
	<select id="getSchemes" resultType="map">
		SELECT distinct id as scheme_id,scheme_name as scheme_name from procurements.createscheme_mst order by id;
	</select>

	<!-- creating accounts receivable -->
	<select id="getYear1" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(year
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as year;
	</select>

	<select id="getMonth" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(month
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as month;
	</select>

	<select id="getDate" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(day FROM CURRENT_TIMESTAMP) as varchar) as integer)) as date;
	</select>

	<insert id="createaccountreceivable" parameterType="map">
		insert into finance.accounts_receivable_header
		(customer,scheme,project,program,sector,service,selected_date,due_date,income_type,
		invoice_number,description,voucher_id,amount,status)
		values(#{p.customer},#{p.scheme},#{p.project},#{p.program},#{p.sector},#{p.service},#{p.selected_date},
		#{p.due_date},#{p.income_type},#{p.invoice_number},#{p.description},
		('AR' || '' || #{date} || '' || #{month} || '' || #{year} ||lpad(CAST(
		#{id} AS character varying ),3,'0')),#{p.amount},0);
	</insert>

	<select id="getCount3" resultType="java.lang.Integer">
		SELECT count(id)+1 as count
		from finance.accounts_receivable_header;
	</select>

	<select id="getaccountsreceivableid"
		resultType="java.lang.Integer">
		SELECT max(id) as accounts_receivable_header from
		finance.accounts_receivable_header;
	</select>

	<insert id="createaccountreceivabledet" parameterType="map">
		insert into finance.accounts_receivable_details
		(accounts_receivable_header,ref_date,gl_account,amount,location,cost_center,voucher_id,document_path,description)
		values(#{accounts_receivable_header},#{p.ref_date},#{p.gl_account},#{p.amount},#{p.location_id},#{p.cost_center},
		('AR' || '' || #{date} || '' || #{month} || '' || #{year} ||lpad(CAST(
		#{id} AS character varying ),3,'0')),#{p.image},
		#{p.descriptiondet});
	</insert>

	<!-- getting all accounts receivables to table -->
<select id="getalllaccountsreceivables" resultType="Finance">
		select distinct a.voucher_id as voucher_id,b.accounts_receivable_header as
		accounts_receivable_header,b.description as description,
		e.account_name as account_name,b.amount as amount,b.ref_date as
		ref_date,c.name as cost_centername,d.name as location_name
		from (select id,voucher_id from finance.accounts_receivable_header) a
		inner join
		(select
		accounts_receivable_header,description,voucher_id,gl_account,amount,ref_date,cost_center,location
		from
		finance.accounts_receivable_details) b on (a.id = b.accounts_receivable_header) inner join
		(select * from hrms.cost_center_mst) c on (c.id = b.cost_center) inner join
		(select * from operations.location_mst) d on (d.id = b.location) inner join
		(select * from finance.gl_group_accounts_mst) e on (select e.id =
		b.gl_account)
	</select>

	<!-- Account receivable list -->
	<select id="getallPendingreceivablesData" resultType="Finance">
		select distinct a.voucher_id as voucher_id,b.name as name,a.created_date as created_date,a.approvestatus,a.created_by from
		(select voucher_id as voucher_id,customer,date_created :: date as
		created_date,created_by as created_by,
		(case when status = 0 then
		'Submitted' when status = 1 then 'Pending'
		when status = 2 then 'Approved' end) as approvestatus from
		finance.accounts_receivable_header where status = 0) a
		inner join (select id,name from finance.customer) b on (a.customer = b.id)
	</select>
	
	<!-- getting accounts receivable list view page table data -->
	<select id="getARDetailstabledatainview" resultType="java.util.Map">
		select distinct a.voucher_id as voucher_id,b.ref_date as ref_date,b.description as description,e.name as cost_centername,d.name,c.account_name from
		(select id,voucher_id from finance.accounts_receivable_header where voucher_id = #{voucher_id}) a inner join 
		(select * from finance.accounts_receivable_details) b on (a.id = b.accounts_receivable_header) inner join
		(select * from finance.gl_group_accounts_mst) c on (c.id = b.gl_account) inner join
		(select * from operations.location_mst) d on (d.id = b.location) inner join
		(select id,name from hrms.cost_center_mst) e on (e.id = b.cost_center)
		
	</select>

	<!-- getting data to view page in accounts receivable list page -->
	<select id="getreceivableviewdata" resultType="Finance">
		select distinct
		a.voucher_id,b.name,d.project_name,f.programname,e.sector_name,a.selected_date,a.due_date,a.amount,a.created_by,
		a.incometype,a.created_date,c.description,g.account_name,c.ref_date,h.location_name,i.name from
		(select id,voucher_id as
		voucher_id,customer,scheme,project,program,sector,selected_date,due_date,amount
		as amount,created_by,
		(case when income_type = 1 then 'Grants' when
		income_type = 2 then 'Trainee Fee' when income_type = 3 then 'Other
		Income' end) incometype,
		date_created :: date as created_date from
		finance.accounts_receivable_header where voucher_id = #{voucher_id}) a
		inner join
		(select id,name from finance.customer) b on (b.id = a.customer) inner join
		(select id as project,project_name from procurements.createproject_mst) d on (d.project =
		a.project) inner join
		(select id as sector_id,sector_name from procurements.createsector_mst) e on (e.sector_id =
		a.sector) inner join
		(select id as programid,program_name as programname from
		procurements.createprogram_mst) f on (f.programid = a.program) inner join
		(select accounts_receivable_header,ref_date,gl_account,location,cost_center,
		description from finance.accounts_receivable_details) c on (c.accounts_receivable_header = a.id) inner join
		(SELECT distinct id,account_name as account_name from finance.gl_group_accounts_mst) g on (g.id = c.gl_account) inner join 
		(SELECT distinct id,name as location_name from operations.location_mst) h on (h.id = c.location) inner join
		(select id,name from hrms.cost_center_mst) i on (i.id = c.cost_center)
	</select>



	<!-- approving accounts receivables -->
<update id="approveaccountsreceivable" parameterType="map">
		update finance.accounts_receivable_header SET status=1 WHERE
		voucher_id=#{p.voucher_id};
	</update>

	<!-- getting approved or rejected data to table in approved or rejected 
		tab for accounts receivable list page -->
	<select id="getallPendingapprovedrejectedreceivablesData"
		resultType="Finance">
		select distinct
		a.voucher_id,b.name,a.created_date,a.approvestatus,a.created_by from
		(select voucher_id as voucher_id,customer,date_created :: date as
		created_date,created_by as created_by,
		(case when status = 0 then
		'Submitted' when status = 1 then 'Pending'
		when status = 2 then 'Approved' end) as approvestatus from
		finance.accounts_receivable_header where status = 1) a
		inner join (select id,name from finance.customer) b on (a.customer = b.id)
	</select>

	<!-- getting all booked accounts receivables to table in booked invoices -->
	<select id="getallbookedreceivablesData" resultType="Finance">
		select distinct a.voucher_id,b.name,a.approvestatus,a.date_created from
		(select
		voucher_id as voucher_id,customer,(case when status = 0 then
		'Submitted' when status = 1 then 'Pending'
		when status = 2 then 'Approved' end) as
		approvestatus,to_char(date_created,' dd-MM-YYYY HH:mi:SS ') as
		date_created
		from finance.accounts_receivable_header) a inner join (select id,name from
		finance.customer) b on (a.customer = b.id)
	</select>

	<!-- getting partially paid invoices in accounts receivable booked invoices -->
	<select id="getpartiallypaideceivablesData" resultType="Finance">
		select distinct a.voucher_id,b.name,a.approvestatus,a.date_created from
		(select
		voucher_id as voucher_id,customer,(case when status = 0 then
		'Submitted' when status = 1 then 'Pending'
		when status = 2 then 'Approved' when status = 9 then 'MF partial release'
		end) as approvestatus,to_char(date_created,' dd-MM-YYYY HH:mi:SS ') as
		date_created
		from finance.accounts_receivable_header where status = 9) a inner join
		(select id,name from finance.customer) b on (a.customer = b.id)
	</select>

	<!-- deleting accounts receivable data from headers table based on voucher 
		id -->
	<delete id="deleteaccoutsreceivableheader"
		parameterType="java.lang.String">
		delete from finance.accounts_receivable_header where
		voucher_id = #{voucher_id};
	</delete>

	<!-- deleting accounts receivable data from details table based on voucher 
		id -->
	<delete id="deleteaccoutsreceivabledetails"
		parameterType="java.lang.String">
		delete from finance.accounts_receivable_details where
		voucher_id = #{voucher_id};
	</delete>

	<!-- uploading documents -->
	<update id="uploaddocuments" parameterType="map">
		update finance.accounts_receivable_details SET
		document_path=#{p.image},description = #{p.descriptiondet}
		WHERE voucher_id=#{p.voucher_id};
	</update>

	<!-- getting voucher id -->
	<select id="getvoucherIDdata" resultType="Finance">
		select voucher_id as
		voucher_id from finance.accounts_receivable_details where voucher_id =
		#{voucher_id};
	</select>

	<!-- getting vendors drop down -->
	<select id="getvendors" resultType="map">
		SELECT distinct id as vendorid,name as vendorname from procurements.vendors order by id;
	</select>

	<!-- creating Journal Voucher details -->
	<select id="getYearJE" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(year
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as year;
	</select>

	<select id="getMonthJE" resultType="java.lang.Integer">
		SELECT
		(cast(cast(EXTRACT(month FROM CURRENT_TIMESTAMP) as varchar) as
		integer)) as month;
	</select>

	<select id="getDateJE" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(day
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as date;
	</select>

	<select id="getCountJE" resultType="java.lang.Integer">
		SELECT count(id)+1 as count
		from finance.journal_entry_header;
	</select> 

	<insert id="CreateJEHeader" parameterType="map">
		insert into finance.journal_entry_header
		(voucher_number,program,project,work_order,date,description,entry_type,expense_type,
		debit_amount,credit_amount,comments,status,financial_year,documents_attached)
		values(('JV-' || '' || #{date} || '' || #{month} || '' || #{year} ||lpad(CAST(
		#{id} AS character varying ),3,'0')),
		#{p.program},#{p.project},#{p.work_order},#{p.date},#{p.description},#{p.entry_type},#{p.expense_type},#{p.debit_amount},
		#{p.credit_amount},#{p.comments},1,#{p.financial_year},'FALSE');  
	</insert>

	<select id="getjournalentryheaderid" resultType="java.lang.Integer">
		SELECT max(id) as journal_entry_header from finance.journal_entry_header;
	</select>

	<insert id="CreateJEDet" parameterType="map">
		insert into finance.journal_entry_details  
		(journal_entry_header,gl_account,cost_center,ref_date,account_type,amount,description)
		values(#{journal_entry_header},#{p.gl_account},#{p.cost_center},#{p.ref_date},#{p.account_type},#{p.amount},#{p.descriptiondet});
	</insert>

	<!-- getting all journal vouchers to table -->
	<select id="getalljournalaccounts" resultType="Finance">
	select distinct b.voucher_number,c.account_name as account_name,a.ref_date as
		ref_date,a.description as description,d.name as cost_centername,
		b.debit_amount as debit_amount,credit_amount as credit_amount from
		(select journal_entry_header,gl_account,cost_center,ref_date,description
		from finance.journal_entry_details) a inner join
		(select id,voucher_number,debit_amount,credit_amount from
		finance.journal_entry_header) b on (b.id =
		a.journal_entry_header)
		inner join (select * from finance.gl_group_accounts_mst) c on (c.id =
		a.gl_account) inner join
		(select * from hrms.cost_center_mst) d on (d.id = a.cost_center)
	</select>

	<!-- deleting journal voucher data from headers table -->
	<delete id="deletejournalvoucherheader"
		parameterType="java.lang.String">
		delete from finance.journal_entry_header where
		voucher_number = #{voucher_number};
	</delete>

	<!-- deleting journal voucher data from details table -->
	<delete id="deletejournalvoucherdetails"
		parameterType="java.lang.String">
		delete from finance.journal_entry_details where
		voucher_number = #{voucher_number};
	</delete>


	<!-- getting districts drop down -->
	<select id="getdistricts" resultType="map">
		SELECT distinct districtid as id,districtname as name from operations.district_mst order by districtid;
	</select>

	<!-- creating work order -->
	<select id="getYearwo" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(year
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as year;
	</select>

	<select id="getMonthwo" resultType="java.lang.Integer">
		SELECT
		(cast(cast(EXTRACT(month FROM CURRENT_TIMESTAMP) as varchar) as
		integer)) as month;
	</select>

	<select id="getCountwo" resultType="java.lang.Integer">
		SELECT count(id)+1 as count from finance.workorder;
	</select>

	<insert id="createworkorder" parameterType="map">
		insert into
		finance.workorder
		(project,program,vendor,amount,workorder_date,type,financial_year,scheme,from_date,
		to_date,reference,service,subject,budjet_type,inclusive_tax,description,document_to_submit,document_path,workorder_id)
		values(#{p.project},#{p.program},#{p.vendor},#{p.amount},#{p.workorder_date},#{p.type},#{p.financial_year},#{p.scheme},
		#{p.from_date},#{p.to_date},#{p.reference},#{p.service},#{p.subject},#{p.budjet_type},#{p.inclusive_tax},#{p.description},
		#{p.document_to_submit},#{p.image},
		('WO-PMK/PMK/PMK' || '' || '' || #{month} || '' || #{year} ||lpad(CAST( #{id} AS
		character varying ),3,'0')));
	</insert>

	<!-- getting work order drop down -->
	<select id="getworkorders" resultType="map">
		SELECT distinct id,
		workorder_id as workorder_id from finance.workorder order by id;
	</select>

	<!-- getting work order details in book invoice -->
	<select id="getDetailsofWO" parameterType="map" resultType="map">
		select distinct a.id,b.name as vendor_name,c.programname as
		program_name,d.servicename as service_name,
		a.from_date as
		fromdate,a.to_date as todate,a.amount as total_amount from
		(select id,vendor,program,service,amount,from_date,to_date from
		finance.workorder) a inner join
		(select * from procurements.vendors) b on (b.vendorid = a.vendor) inner
		join
		(select * from procurements.programs_mst) c on (c.programid = a.program)
		inner join
		(select * from procurements.service_mst) d on (d.serviceid = a.service) where
		a.id = #{p.work_order}
	</select>     

	<!-- book invoice for others type -->
	<select id="getYearAP" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(year
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as year;
	</select>

	<select id="getMonthAP" resultType="java.lang.Integer">
		SELECT
		(cast(cast(EXTRACT(month FROM CURRENT_TIMESTAMP) as varchar) as
		integer)) as month;
	</select>

	<select id="getDateAP" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(day
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as date;
	</select>

	<select id="getCountAP" resultType="java.lang.Integer">
		SELECT count(id)+1 as count
		from finance.accounts_payable;
	</select>

	<insert id="bookothersinvoice" parameterType="map">
		insert into
		finance.accounts_payable
		(voucher_id,order_type,program,service,vendor,cost_center,amount,gl_account,hsn_code,
		invoice_number,invoice_date,due_date,description,documnet_path,attachment,location,item_description)
		values(('AP-' || '' || #{date} || '' || #{month} || '' || #{year} ||''
		|| lpad(CAST( #{id} AS character varying ),4,'0')),
		#{p.order_type},#{p.program},#{p.service},#{p.vendor},#{p.cost_center},#{p.amount},#{p.gl_account},#{p.hsn_code},
		#{p.invoice_number},#{p.invoice_date},#{p.due_date},#{p.description},#{p.image},#{p.image1},#{p.location_id},
		#{p.item_description});
	</insert>

	<!-- getting Segments drop down -->
	<select id="getSegments" resultType="map">
		SELECT distinct id,segment_name as segment_name from procurements.createsegment_mst order by id;
	</select>

	<!-- getting SDEI Group drop down -->
	<select id="getSDEIgroupnames" resultType="map">
		SELECT distinct id,sdei_groupname as group_name from procurements.sdeigroup_mst order by id;
	</select>

	<!-- creating Budget Input -->
	<select id="getYearBI" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(year
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as year;
	</select>

	<select id="getMonthBI" resultType="java.lang.Integer">
		SELECT
		(cast(cast(EXTRACT(month FROM CURRENT_TIMESTAMP) as varchar) as
		integer)) as month;
	</select>

	<select id="getDateBI" resultType="java.lang.Integer">
		SELECT (cast(cast(EXTRACT(day
		FROM CURRENT_TIMESTAMP) as varchar) as integer)) as date;
	</select>

	<select id="getCountBI" resultType="java.lang.Integer">
		SELECT count(id)+1 as count
		from finance.budget_input;
	</select>

	<insert id="createBudgetinput" parameterType="map">
		insert into finance.budget_input
		(budget_id,financial_year,sdei_group,scheme,sector,segment,hc_planned,non_planned,planned,
		adnn_budget,total_budget,physical_output,from_date,to_date,description,opex_planned,opex_non_planned,opex_adnn_planned,
		opex_total_budget,capex_total_budget,status)
		values(('BI-' || '' || #{date} || '' || #{month} || '' || #{year} ||'' ||
		lpad(CAST( #{id} AS character varying ),4,'0')),
		#{p.financialyear},#{p.sdeigroup},#{p.schemename},#{p.sectorname},#{p.segmentname},#{p.hcplanned},#{p.capex_non_planned},#{p.capex_planned},
		#{p.capex_adnn_budget},(#{p.opexplanned} + #{p.opexnon_planned} +
		#{p.opexadnn_planned} + #{p.capex_planned} + #{p.capex_adnn_budget} +
		#{p.capex_non_planned}),
		#{p.physicaloutput},#{p.fromdate},#{p.todate},#{p.descriptions},#{p.opexplanned},#{p.opexnon_planned},#{p.opexadnn_planned},
		(#{p.opexplanned} + #{p.opexnon_planned} + #{p.opexadnn_planned}),(#{p.capex_planned} + #{p.capex_adnn_budget} + #{p.capex_non_planned}),0);
	</insert>

	<select id="getbudgetid" resultType="java.lang.Integer">
		SELECT max(id) as budgetid
		from finance.budget_input;
	</select>

	<insert id="insertdatatobudgetnote" parameterType="map">
		insert into
		finance.budget_input_note (budget_id,title)
		values(#{budgetid},#{p.title});
	</insert>

	<!-- getting all budget inputs to table -->
	<select id="getallBudgetInputs" resultType="Finance">
		select distinct
		a.budget_id,a.hc_planned,a.non_planned,a.planned,a.adnn_budget,a.total_budget,a.physical_output,a.from_date,a.to_date,a.description,
		a.opex_planned,a.opex_non_planned,a.opex_adnn_planned,a.opex_total_budget,a.capex_total_budget,a.approvestatus,b.scheme_name,c.sector_name,
		d.sdei_groupname as sdei_groupname,e.segment_name from
		(select budget_id as
		budget_id,sdei_group,scheme,sector,segment,hc_planned as
		hc_planned,non_planned as non_planned,planned as planned,
		adnn_budget as adnn_budget,total_budget as total_budget,physical_output as
		physical_output,from_date as from_date,to_date as to_date,
		description as description,opex_planned as opex_planned,opex_non_planned as
		opex_non_planned,opex_adnn_planned as opex_adnn_planned,
		opex_total_budget as opex_total_budget,capex_total_budget as
		capex_total_budget,(case when status = 0 then 'Submitted'
		when status = 1 then 'Pending' when status = 2 then 'Approved' end) as
		approvestatus from finance.budget_input) a
		inner join (select * from procurements.createscheme_mst) b on (a.scheme = b.id)
		inner join (select * from procurements.createsector_mst) c on (c.id = a.sector)
		inner join (select * from procurements.sdeigroup_mst) d on (d.id = a.sdei_group)
		inner join (select * from procurements.createsegment_mst) e on (e.id = a.segment)
	</select>

	<!-- getting data in pop up in budget page -->
	<select id="viewbudgetpopupdata" resultType="Finance">
		select distinct
		a.budget_id,a.hc_planned,a.non_planned,a.planned,a.adnn_budget,a.total_budget,a.physical_output,a.from_date,a.to_date,a.description,
		a.opex_planned,a.opex_non_planned,a.opex_adnn_planned,a.opex_total_budget,a.capex_total_budget,a.approvestatus,b.scheme_name,c.sector_name,
		d.sdei_groupname,e.segment_name from
		(select budget_id as
		budget_id,sdei_group,scheme,sector,segment,hc_planned as
		hc_planned,non_planned as non_planned,planned as planned,
		adnn_budget as adnn_budget,total_budget as total_budget,physical_output as
		physical_output,from_date as from_date,to_date as to_date,
		description as description,opex_planned as opex_planned,opex_non_planned as
		opex_non_planned,opex_adnn_planned as opex_adnn_planned,
		opex_total_budget as opex_total_budget,capex_total_budget as
		capex_total_budget,(case when status = 0 then 'Submitted'
		when status = 1 then 'Pending' when status = 2 then 'Approved' end) as
		approvestatus from finance.budget_input where budget_id =
		#{budget_id}) a
		inner join (select * from procurements.createscheme_mst) b on (a.scheme = b.id)
		inner join (select * from procurements.createsector_mst) c on (c.id = a.sector)
		inner join (select * from procurements.sdeigroup_mst) d on (d.id = a.sdei_group)
		inner join (select * from procurements.createsegment_mst) e on (e.id = a.segment)
	</select>
	<!-- getting data in budget over view table based on financial year -->
	<select id="getbudgetdataoverview" resultType="Finance"
		parameterType="map">
		select distinct
		a.budget_id,a.hc_planned,a.non_planned,a.planned,a.adnn_budget,a.total_budget,a.physical_output,a.from_date,a.to_date,a.description,
		a.opex_planned,a.opex_non_planned,a.opex_adnn_planned,a.opex_total_budget,a.capex_total_budget,a.approvestatus,b.scheme_name,c.sector_name,
		d.sdei_groupname as group_name,e.segment_name from
		(select budget_id as
		budget_id,sdei_group,scheme,sector,segment,hc_planned as
		hc_planned,non_planned as non_planned,planned as planned,
		adnn_budget as adnn_budget,total_budget as total_budget,physical_output as
		physical_output,from_date as from_date,to_date as to_date,
		description as description,opex_planned as opex_planned,opex_non_planned as
		opex_non_planned,opex_adnn_planned as opex_adnn_planned,
		opex_total_budget as opex_total_budget,capex_total_budget as
		capex_total_budget,(case when status = 0 then 'Submitted'
		when status = 1 then 'Pending' when status = 2 then 'Approved' end) as
		approvestatus from finance.budget_input where financial_year =
		#{p.financialyear}) a
		inner join (select * from procurements.createscheme_mst) b on (a.scheme = b.id)
		inner join (select * from procurements.createsector_mst) c on (c.id = a.sector)
		inner join (select * from procurements.sdeigroup_mst) d on (d.id = a.sdei_group)
		inner join (select * from procurements.createsegment_mst) e on (e.id = a.segment)
	</select>

	<!-- getting all pending budget inputs to pending list table in budget approval 
		page -->
	<select id="getallPendingbudgetData" resultType="Finance">
		select distinct
		a.budget_id,b.years,c.sdei_groupname as group_name,a.hc_planned,a.non_planned,a.planned,a.adnn_budget,a.total_budget,a.physical_output,
		a.opex_planned,a.opex_non_planned,a.opex_adnn_planned,a.opex_total_budget,a.capex_total_budget
		from
		(select budget_id as
		budget_id,financial_year,sdei_group,hc_planned as
		hc_planned,non_planned as non_planned,planned as planned,
		adnn_budget
		as adnn_budget,total_budget as total_budget,physical_output as
		physical_output,status as status,opex_planned as opex_planned,
		opex_non_planned as opex_non_planned,opex_adnn_planned as
		opex_adnn_planned,opex_total_budget as opex_total_budget,
		capex_total_budget as capex_total_budget from finance.budget_input
		where status = 0) a inner join
		(select * from procurements.years_mst) b on (a.financial_year = b.yearid)
		inner join (select * from procurements.sdeigroup_mst) c on (c.id = a.sdei_group)
	</select>

	<!-- getting approved or rejected budget inputs list to table in budget 
		approval page -->
	<select id="getallapprovedbudgetData" resultType="Finance">
		select distinct
		a.budget_id,b.years,c.sdei_groupname as group_name,a.hc_planned,a.non_planned,a.planned,a.adnn_budget,a.total_budget,a.physical_output,
		a.opex_planned,a.opex_non_planned,a.opex_adnn_planned,a.opex_total_budget,a.capex_total_budget
		from
		(select budget_id as
		budget_id,financial_year,sdei_group,hc_planned as
		hc_planned,non_planned as non_planned,planned as planned,
		adnn_budget
		as adnn_budget,total_budget as total_budget,physical_output as
		physical_output,status as status,opex_planned as opex_planned,
		opex_non_planned as opex_non_planned,opex_adnn_planned as
		opex_adnn_planned,opex_total_budget as opex_total_budget,
		capex_total_budget as capex_total_budget from finance.budget_input
		where status = 1) a inner join
		(select * from procurements.years_mst) b on (a.financial_year = b.yearid)
		inner join
		(select * from procurements.sdeigroup_mst) c on (c.id = a.sdei_group)
	</select>

	<!-- getting data in budget approval view page -->
	<select id="budgetviewpagedata" resultType="Finance">
		select distinct
		a.budget_id,b.years,c.group_name,d.segment_name,e.scheme_name,a.hc_planned,a.non_planned,a.planned,a.adnn_budget,
		a.total_budget,a.physical_output,a.from_date,a.to_date,a.description,a.opex_planned,a.opex_non_planned,a.opex_adnn_planned,
		a.opex_total_budget,a.capex_total_budget from
		(select budget_id as
		budget_id,financial_year,sdei_group,scheme,sector,segment,hc_planned
		as hc_planned,non_planned as non_planned,
		planned as
		planned,adnn_budget as adnn_budget,total_budget as
		total_budget,physical_output as physical_output,from_date as
		from_date,
		to_date as to_date,description as description,opex_planned
		as opex_planned,opex_non_planned as opex_non_planned,
		opex_adnn_planned as opex_adnn_planned,opex_total_budget as
		opex_total_budget,capex_total_budget as capex_total_budget from
		finance.budget_input where budget_id = #{budget_id}) a inner join
		(select yearid,years from procurements.years_mst) b on (b.yearid =
		a.financial_year)
		inner join (select id, sdei_groupname as group_name from procurements.sdeigroup_mst) c on (c.id =
		a.sdei_group) inner join
		(select id,segment_name from procurements.createsegment_mst) d on (a.segment =
		d.id) inner join
		(select id,scheme_name from procurements.createscheme_mst) e on (e.id = a.scheme)
	</select>
	
	
	
	
	<!-- getting financial year -->
	<select id="getfinanceyear" resultType="Finance">
		select distinct years as year_selected from procurements.years_mst where yearid = #{financialyear}
	</select>

	<!-- approving budget input in budget approval view page -->
	<update id="approvebudgetinput" parameterType="map">
		update
		finance.budget_input SET status=1 WHERE budget_id=#{p.budget_id};
	</update>

	<!-- getting all pending data to table -->
	<select id="getallPendingData" resultType="Finance">
		select distinct claim_reimbursement_id as claim_reimbursement_id,(case when purpose =
		1 then 'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,
		created_date as created_date,from_date as
		from_date,to_date as to_date,advance_amount as
		advance_amount,release_amount as release_amount,
		submitted_by as
		submittedby,approved_by as approvedby,(case when status = 0 then
		'Submitted' when status = 1 then 'Pending' when status = 2 then 'Approved'
		end) as approvestatus
		from finance.claim_reimbursment where status = 0 or status = 1;
	</select>

	<!-- getting data in pending view page -->
	<select id="getpendingclaimDetails" resultType="Finance">
		select distinct
		a.claim_reimbursement_id,a.purposename,a.created_date,a.from_date,a.to_date,a.advance_amount,a.release_amount,a.submittedby,
		a.approvedby,a.approvestatus,b.project_name as project_name,a.description from
		(select claim_reimbursement_id as claim_reimbursement_id,(case when
		purpose = 1 then 'Travel Advance' when purpose = 2 then 'Others' end)
		as purposename,description,
		created_date :: date as created_date,from_date as
		from_date,to_date as to_date,advance_amount as
		advance_amount,release_amount as release_amount,
		submitted_by as
		submittedby,approved_by as approvedby,(case when status = 0 then
		'Submitted' when status = 1 then 'Pending' when status = 2 then 'Approved'
		end) as approvestatus,project
		from finance.claim_reimbursment where
		claim_reimbursement_id = #{claim_reimbursement_id}) a inner join
		(select * from procurements.createproject_mst) b on (a.project = b.id)
	</select>

	<!-- getting data in view page table -->
	<select id="getViewpagetabledata" resultType="Finance">
		select created_date
		:: date as created_date,(case when status = 0 then 'Submitted' when
		status = 1 then 'Pending' when status = 2 then 'Approved' end) as
		approvestatus
		from finance.claim_reimbursment where claim_reimbursement_id =
		#{claim_reimbursement_id};
	</select>

	<update id="approveclaim" parameterType="map">
		update finance.claim_reimbursment SET status=2,cost_center =
		#{p.cost_center} WHERE
		claim_reimbursement_id=#{p.claim_reimbursement_id};
	</update>

	<!-- getting all approved data to table -->
	<select id="getallApprovedData" resultType="Finance">
		select distinct claim_reimbursement_id as claim_reimbursement_id,(case when purpose =
		1 then 'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,
		created_date as created_date,from_date as
		from_date,to_date as to_date,advance_amount as
		advance_amount,release_amount as release_amount,
		submitted_by as
		submittedby,approved_by as approvedby,(case when status = 0 then
		'Submitted' when status = 1 then 'Pending' when status = 2 then 'Approved'
		end) as approvestatus
		from finance.claim_reimbursment where status = 2;
	</select>

	<!-- getting data in approved view page -->
	<select id="getAcceptedclaimDetails" resultType="Finance">
		select distinct
		a.claim_reimbursement_id,a.purposename,a.created_date,a.from_date,a.to_date,a.advance_amount,a.release_amount,a.submittedby,
		a.approvedby,a.approvestatus,b.project_name as project_name,c.name as
		name,a.description from
		(select claim_reimbursement_id as
		claim_reimbursement_id,(case when purpose = 1 then 'Travel Advance'
		when purpose = 2 then 'Others' end) as purposename,description,
		created_date ::
		date as created_date,from_date as from_date,to_date as
		to_date,advance_amount as advance_amount,release_amount as
		release_amount,
		submitted_by as submittedby,approved_by as
		approvedby,(case when status = 0 then 'Submitted' when status = 1 then
		'Pending' when status = 2 then 'Approved' end) as approvestatus,project,
		cost_center from finance.claim_reimbursment where
		claim_reimbursement_id = #{claim_reimbursement_id}) a
		inner join (select * from procurements.createproject_mst) b on (a.project = b.id)
		inner join (select * from hrms.cost_center_mst) c on (a.cost_center = c.id);
	</select>

	<!-- getting advance list data to table -->
	<select id="getalladvanceListData" resultType="Finance">
		select distinct
		a.claim_advance_id,a.description,a.from_date,a.to_date,a.amount,a.approvestatus,a.created_date,b.project_name
		as project_name from
		(select claim_advance_id as claim_advance_id,description as
		description,from_date as from_date,to_date as to_date,amount as
		amount,
		(case when status = 0 then 'Submitted' when status = 1 then 'Pending' when
		status = 2 then 'Approved' end) as approvestatus,
		created_date :: date as created_date,project from finance.claim_advance) a inner
		join (select * from procurements.createproject_mst) b on (a.project = b.id);
	</select>

	<!-- getting table data in view page in advance list page -->
	<select id="getallviewHistoryListData" resultType="Finance">
		select distinct
		a.claim_advance_id,a.description,a.from_date,a.to_date,a.amount,a.approvestatus,a.created_date,b.project_name
		as project_name from
		(select claim_advance_id as claim_advance_id,description as
		description,from_date as from_date,to_date as to_date,amount as
		amount,
		(case when status = 0 then 'Submitted' when status = 1 then 'Pending' when
		status = 2 then 'Approved' end) as approvestatus,
		created_date :: date as created_date,project from finance.claim_advance) a inner
		join (select * from procurements.createproject_mst) b on (a.project = b.id);
	</select>

	<!-- getting data in advanced list view page -->
	<select id="getadvanceviewpgedata" resultType="Finance">
		select distinct
		a.claim_advance_id,a.purposename,a.created_date,a.from_date,a.to_date,a.amount,a.approvestatus,a.description,b.project_name
		from
		(select claim_advance_id as claim_advance_id,(case when purpose = 1 then
		'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,created_date :: date as created_date,
		from_date as from_date,to_date as to_date,amount as amount,(case when status =
		0 then 'Submitted' when status = 1 then 'Pending' when status = 2 then
		'Approved' end) as approvestatus,
		project,cost_center,description as description from finance.claim_advance where claim_advance_id =
		#{claim_advance_id}) a 
		inner join (select * from procurements.createproject_mst) b on (b.id = a.project)
	</select>

	<!-- getting all advance pending data to table -->
	<select id="getalladvancePendingData" resultType="Finance">
		select distinct
		a.claim_advance_id,a.purposename,a.created_date,a.from_date,a.to_date,a.amount,a.approvestatus,a.description,b.project_name
		from
		(select claim_advance_id as claim_advance_id,(case when purpose = 1 then
		'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,created_date :: date as created_date,
		from_date as from_date,to_date as to_date,amount as amount,(case when status = 0
		then 'Submitted' when status = 1 then 'Pending' 
		when status = 2 then 'Approved' end) as approvestatus,
		project,cost_center,description as description from finance.claim_advance where status = 1 or status = 0) a inner
		join (select * from procurements.createproject_mst) b on (b.id = a.project)
	</select>

	<!-- getting advance pending view page data -->
	<select id="getadvancependingvewdata" resultType="Finance">
		select distinct
		a.claim_advance_id,a.purposename,a.created_date,a.from_date,a.to_date,a.amount,a.approvestatus,a.description,b.project_name
		from
		(select claim_advance_id as claim_advance_id,(case when purpose = 1 then
		'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,created_date :: date as created_date,
		from_date as from_date,to_date as to_date,amount as amount,(case when status = 0 then 'Submitted' 
		when status = 1 then 'Pending' when status = 2 then 'Approved' end) as approvestatus,
		project,cost_center,description as description from finance.claim_advance where claim_advance_id =
		#{claim_advance_id}) a inner join (select * from procurements.createproject_mst) b
		on (b.id = a.project)
	</select>

	<!-- updating advance claim data -->
	<update id="updateadvanceclaimdata" parameterType="map">
		update finance.claim_advance SET purpose=#{p.purpose},description =
		#{p.description},amount = #{p.amount},project = #{p.project},
		from_date = #{p.from_date},to_date = #{p.to_date},document =
		#{p.image} WHERE claim_advance_id=#{p.claim_advance_id};
	</update>


	<!-- getting data in advance claim pop up -->
	<select id="getpopupdata" resultType="Finance">
		select distinct a.claim_advance_id,a.purpose,a.description,a.from_date,a.to_date,a.amount,b.years,a.project from
		(select purpose as purpose,description,from_date,to_date,amount,financial_year,claim_advance_id,project as project
		from finance.claim_advance where claim_advance_id = #{claim_advance_id}) as a inner join 
		(select * from procurements.years_mst) as b on (a.financial_year = b.yearid)
	</select>

	<!-- approving advance claim -->
	<update id="Approveadvanceclaim" parameterType="map">
		update finance.claim_advance SET status=2,cost_center = #{p.cost_center}
		WHERE claim_advance_id=#{p.claim_advance_id};
	</update>

	<!-- getting all approved list data to table -->
	<select id="getalladvanceApprovedData" resultType="Finance">
		select distinct
		a.claim_advance_id,a.purposename,a.created_date,a.from_date,a.to_date,a.amount,a.approvestatus,a.description,b.project_name
		from
		(select claim_advance_id as claim_advance_id,(case when purpose = 1 then
		'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,created_date :: date as created_date,
		from_date as from_date,to_date as to_date,amount as amount,(case when status = 0 then 'Submitted' 
		when status = 1 then 'Pending' when status = 2 then
		'Approved' end) as approvestatus,
		project,cost_center,description as description from finance.claim_advance where status = 2) a inner
		join (select * from procurements.createproject_mst) b on (b.id = a.project)
	</select>

	<!-- getting data in approved view page in advance list -->
	<select id="getapprovedclaimDetails" resultType="Finance">
		select distinct
		a.claim_advance_id,a.purposename,a.created_date,a.from_date,a.to_date,a.amount,a.submittedby,a.description,
		a.approvedby,a.approvestatus,b.project_name as project_name,c.name as
		name from
		(select claim_advance_id as claim_advance_id,(case when
		purpose = 1 then 'Travel Advance' when purpose = 2 then 'Others' end)
		as purposename,
		created_date :: date as created_date,from_date as
		from_date,to_date as to_date,amount as amount,submitted_by as
		submittedby,
		approved_by as approvedby,(case when status = 0 then 'Submitted' when status = 1 then 'Pending' 
		when status = 2 then 'Approved'
		end) as approvestatus,project,cost_center,description from
		finance.claim_advance where claim_advance_id = #{claim_advance_id}) a
		inner join (select * from procurements.createproject_mst) b on (a.project = b.id)
		inner join (select * from hrms.cost_center_mst) c on (a.cost_center = c.id);
	</select>


	<!-- getting all bill submission lists to table -->
	<select id="getallbillsubmissionlists" resultType="Finance">
		select distinct claim_reimbursement_id as claim_reimbursement_id,(case when purpose =
		1 then 'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,
		created_date as created_date,from_date as
		from_date,to_date as to_date,advance_amount as
		advance_amount,release_amount as release_amount,
		submitted_by as
		submittedby,approved_by as approvedby,(case when status = 0 then
		'Submitted' when status = 1 then 'Pending' when status = 2 then ''
		end) as approvestatus
		from finance.claim_reimbursment;
	</select>

	<!-- getting data in bill submission view page -->
	<select id="getbillsubmissionviewpgedata" resultType="Finance">
		select distinct
		a.claim_reimbursement_id,a.purposename,a.created_date,a.from_date,a.to_date,a.advance_amount,a.release_amount,a.submittedby,
		a.approvedby,a.approvestatus,a.description,b.project_name as
		project_name from
		(select claim_reimbursement_id as
		claim_reimbursement_id,(case when purpose = 1 then 'Travel Advance'
		when purpose = 2 then 'Others' end) as purposename,
		created_date ::
		date as created_date,from_date as from_date,to_date as
		to_date,advance_amount as advance_amount,release_amount as
		release_amount,description,
		submitted_by as submittedby,approved_by as
		approvedby,(case when status = 0 then 'Submitted' when status = 1 then
		'Pending' when status = 2 then '' end) as approvestatus,project
		from finance.claim_reimbursment where claim_reimbursement_id =
		#{claim_reimbursement_id}) a inner join 
		(select * from procurements.createproject_mst) b on (a.project = b.id)		
	</select>

	<!-- getting data in bill submission update page -->
		<select id="getbillsubmissionupdatedata" resultType="Finance">
		select distinct
		a.claim_reimbursement_id,a.purposename,a.created_date,a.from_date,a.to_date,a.advance_amount,a.release_amount,a.submittedby,a.description,
		a.approvedby,a.approvestatus,a.project,c.claim_id,c.gl_account,c.name,c.amount,c.details_date,c.claim_type,c.location as location_id from
		(select
		id,claim_reimbursement_id as claim_reimbursement_id,(case when purpose =
		1 then 'Travel Advance' when purpose = 2 then 'Others' end) as
		purposename,
		created_date :: date as created_date,from_date as
		from_date,to_date as to_date,advance_amount as  
		advance_amount,release_amount as release_amount,description,
		submitted_by as submittedby,approved_by as approvedby,(case when
		status = 0 then 'Submitted' when status = 1 then 'Pending' when status
		= 2 then '' end) as approvestatus,project
		from
		finance.claim_reimbursment where claim_reimbursement_id =
		#{claim_reimbursement_id}) a inner join (select * from
		procurements.createproject_mst) b on (a.project = b.id) inner join
		(select claim_id,gl_account,name,amount,details_date,claim_type,location 
		from finance.claim_reimbursment_details) c on (c.claim_id = a.id)
	</select>

	<!-- getting data of advance claim in claim status report page -->
	<select id="getAdvanceClaimdata" resultType="Finance" parameterType="map">
		select distinct claim_advance_id as claim_advance_id,from_date as from_date,to_date
		as to_date,submitted_by as submitted_by,approved_by as
		approved_by,created_date as created_date,
		(case when status = 0 then 'Submitted' when status = 1 then 'Pending' when
		status = 2 then 'Approved' end) as approvestatus,release_amount as
		advance_amount from
		finance.claim_advance where from_date >= #{p.from_date} :: timestamp AND #{p.to_date} ::
		timestamp >= to_date
	</select>

	<!-- getting data of reimbursement claim in claim status report page -->
	<select id="getreimbursementClaimdata" resultType="Finance"
		parameterType="map">
		select distinct claim_reimbursement_id as claim_reimbursement_id,from_date as
		from_date,to_date as to_date,submitted_by as submitted_by,approved_by
		as approved_by,created_date as created_date,
		(case when status = 0 then 'Submitted' when status = 1 then 'Pending' when
		status = 2 then 'Approved' end) as approvestatus,advance_amount as
		advance_amount from
		finance.claim_reimbursment where from_date >= #{p.from_date} :: timestamp AND #{p.to_date} ::
		timestamp >= to_date
	</select>

	<!-- getting advance claims drop down -->
	<select id="getAdvanceclaims" resultType="map">
		SELECT distinct id,
		claim_advance_id as claim_advance_id from finance.claim_advance order
		by id;
	</select>
          
	<!-- getting reimbursement claims drop down -->
	<select id="getReimbursementclaims" resultType="map">
		SELECT distinct
		id, claim_reimbursement_id as claim_reimbursement_id from finance.claim_reimbursment order by id;
	</select>

	<!-- getting je list data in submitted je tab for period type -->
	<select id="getperiodJEList" resultType="Finance" parameterType="map">
	select distinct a.voucher_number,a.project,a.date as voucher_date,a.description,a.amount,e.workorder_id,f.invoice_name as approvestatus,
	c.name,d.project_name,a.entrytype_name,g.account_name from
		(select id,voucher_number as voucher_number,project,date,description,(debit_amount + credit_amount) as amount,
		work_order,status,(case when entry_type = 1 then 'Journal' when entry_type = 2 then 'Invoice' when 
		entry_type = 3 then 'Payment Entry' when entry_type = 4 then 'Payment Receipt' when entry_type = 5 then
		'Contra' when entry_type = 6 then 'Payroll Entry'
		when entry_type = 7 then 'Claim' when entry_type = 8 then 'Imprest' when
		entry_type = 9 then 'Receivable' end) as entrytype_name
		from finance.journal_entry_header where date >= #{p.from_date} ::
		timestamp AND #{p.to_date} :: timestamp >= date AND entry_type = #{p.entry_type}) a inner join 
		(select journal_entry_header,cost_center,gl_account from
		finance.journal_entry_details) b on (a.id =
		b.journal_entry_header) inner join
		(select * from hrms.cost_center_mst) c on (b.cost_center = c.id) inner join
		(select * from procurements.createproject_mst) d on (d.id = a.project) inner join 
		(select id,workorder_id from finance.workorder) e on (e.id =
		a.work_order) inner join 
		(select * from finance.invoice_status) f on (f.invoice_status= a.status) inner join
		(SELECT distinct id,account_name as account_name 
		from finance.gl_group_accounts_mst) g on (g.id = b.gl_account)	

	</select>
	
	<!-- getting je list data in submitted je tab for Financial type -->
	<!-- getting je list data in submitted je tab for Financial type -->
	<select id="getfinancialJEList" resultType="Finance" parameterType="map">
	select distinct a.voucher_number,a.project,a.date as voucher_date,a.description,a.amount,e.workorder_id,f.invoice_name as approvestatus,
	c.name,d.project_name,a.entrytype_name,g.account_name from
		(select id,voucher_number as voucher_number,project,date,description,(debit_amount + credit_amount) as amount,
		work_order,status,(case when entry_type = 1 then 'Journal' when entry_type = 2 then 'Invoice' when 
		entry_type = 3 then 'Payment Entry' when entry_type = 4 then 'Payment Receipt' when entry_type = 5 then
		'Contra' when entry_type = 6 then 'Payroll Entry'
		when entry_type = 7 then 'Claim' when entry_type = 8 then 'Imprest' when
		entry_type = 9 then 'Receivable' end) as entrytype_name,financial_year
		from finance.journal_entry_header where financial_year = #{p.financial_year} AND entry_type = #{p.entry_type}) a inner join 
		(select journal_entry_header,cost_center,gl_account from
		finance.journal_entry_details) b on (a.id =
		b.journal_entry_header) inner join
		(select * from hrms.cost_center_mst) c on (b.cost_center = c.id) inner join
		(select * from procurements.createproject_mst) d on (d.id = a.project) inner join 
		(select id,workorder_id from finance.workorder) e on (e.id =
		a.work_order) inner join 
		(select * from finance.invoice_status) f on (f.invoice_status= a.status) inner join
		(SELECT distinct id,account_name as account_name 
		from finance.gl_group_accounts_mst) g on (g.id = b.gl_account)

	</select>                                                         

	<!-- getting data in view pop up in submitted je list tab for period type -->
	<select id="getsubmittedjelistdata" resultType="Finance">
	select distinct
		a.voucher_number,a.entrytype_name,a.voucher_date,b.project_name,c.workorder_id,e.account_name,f.name,d.description,
		a.debit_amount,a.credit_amount from
		(select id,voucher_number as voucher_number,project,work_order,debit_amount,credit_amount,(case
		when entry_type = 1 then 'Journal' when entry_type = 2 then 'Invoice'
		when entry_type = 3 then 'Payment Entry' when entry_type = 4 then
		'Payment Receipt' when entry_type = 5 then 'Contra'
		when entry_type = 6 then 'Payroll Entry' when entry_type = 7 then 'Claim'
		when entry_type = 8 then 'Imprest'
		when entry_type = 9 then 'Receivable' end) as entrytype_name,date as
		voucher_date from finance.journal_entry_header 
		where voucher_number = #{voucher_number}) a inner join (select * from
		procurements.createproject_mst) b on (a.project = b.id)
		inner join (select * from finance.workorder) c on (c.id = a.work_order) inner join 
		(select journal_entry_header,gl_account,cost_center,description from finance.journal_entry_details) d 
		on (d.journal_entry_header = a.id) inner join
		(SELECT id,account_name as account_name from finance.gl_group_accounts_mst) e on (e.id = d.gl_account) inner join
		(select id,name from hrms.cost_center_mst) f on (f.id = d.cost_center)
	</select>

	<!-- getting pop up table data for submitted je list view for period type -->
	<select id="getpopuptabledatasubperiod" resultType="Finance"
		parameterType="map">
		select distinct a.journal_entry_header,a.description as description,c.account_name as
		account_name,b.name as name from
		(select journal_entry_header as
		journal_entry_header,description,gl_account,cost_center from
		finance.journal_entry_details where voucher_number = #{p.voucher_number}) a inner join
		(select * from hrms.cost_center_mst) b on (a.cost_center = b.id) inner join
		(select id,account_name from finance.gl_group_accounts_mst) c on (c.id = a.gl_account)
	</select>

	<!-- getting data in update page in submitted je list tab for period type -->
	<select id="getupdatesubperioddata" resultType="Finance">	
	 select distinct
		a.voucher_number,a.date,a.expense_type,a.project,a.work_order,b.cost_center,b.gl_account,b.cost_center,b.description,
		a.debit_amount,a.credit_amount,b.journal_entry_header
		from
		(select id,expense_type,date as
		date,voucher_number,project,work_order,debit_amount,credit_amount from
		finance.journal_entry_header where voucher_number = #{voucher_number}) a inner join
		(select id,journal_entry_header,gl_account,cost_center,description from finance.journal_entry_details) b on
		(a.id = b.journal_entry_header)   
	</select>

	<!-- getting financial year drop downs in generate form-16 page -->
	<select id="getEmployeenames" resultType="map">
		SELECT distinct id,
		concat(first_name,' ',last_name) as name from
		hrms.employee_personal_details order by id;
	</select>
  
	<!-- getting data in pending invoices tab in booked invoice page in finance 
		login -->
	<select id="getallPendinginvoicesData" resultType="Finance">
		select distinct
		a.voucher_id,a.workorder,a.ordertype,b.workorder_id,c.name,d.approvestatus,a.date_created
		from
		(select voucher_id as voucher_id,(case when order_type = 0 then
		'Work Order' when order_type = 1 then 'Others' end) as ordertype,
		workorder,vendor,status,to_char(date_created,' dd-MM-YYYY HH:mi:SS ')
		as date_created from finance.accounts_payable where status = 1) a
		inner join ( select id,workorder_id as workorder_id from
		finance.workorder) b on (a.workorder = b.id)
		inner join (select id,
		name as name from procurements.vendors) c on (c.id = a.vendor)
		inner join (select invoice_status as invoice_status,invoice_name as
		approvestatus from finance.invoice_status) d on (a.status =
		d.invoice_status)
	</select>





	<!-- Accounts_payable -->
	<select id="getAllPendings" resultType="map">
		select
		a.order_type,a.workorder,a.date_created,a.voucher_id,b.workorder_id,c.name
		as
		vendor_name,d.invoice_name as invoice_status from(select (case when
		order_type=0 then 'Workorder'
		when order_type=1 then 'Purchase Order'
		when order_type=2 then 'Others'
		when order_type=3 then 'MOU' end) as
		order_type,to_char(date_created,'
		dd-MM-YYYY HH:mi:SS ') as
		date_created,voucher_id,workorder,vendor,status from
		finance.accounts_payable where status=1)a inner join(select
		id,workorder_id from
		finance.workorder)b on a.workorder=b.id inner
		join(select id,name from procurements.vendors)c
		on a.vendor=c.id inner join
		(select id,invoice_status,invoice_name
		from finance.invoice_status)d on
		a.status=d.invoice_status
	</select>

<select id="getByPendingDetails" resultType="Finance">
		select distinct
		a.invoice_id,a.invoice_date,a.due_date,a.net_amount,a.amount,a.submitted_date::date,a.description,b.name
		as createdby,
		c.voucher_id,c.amount,c.credit_tax_amount,c.debit_tax_amount,c.net_amount,k.cost_center,d.workorder_id,d.workorder_amount,
		e.project_name,f.program_name,g.service_name,j.document_path,j.document_name
		from (select
		id,invoice_id,account_payable,invoice_date::date,due_date::date,amount,net_amount,date_created
		as submitted_date,description
		from finance.invoice_header)a
		inner join
		(select
		id,voucher_id,amount,credit_tax_amount,debit_tax_amount,net_amount,vendor,workorder,cost_center,status
		from finance.accounts_payable)c
		on c.id=a.account_payable inner join
		(select id,name from
		procurements.vendors)b on c.vendor=b.id inner join
		(select id,workorder_id,
		amount as workorder_amount,project,program
		from
		finance.workorder)d on c.workorder=d.id
		inner join (select id,name
		as
		project_name from procurements.createproject_mst)e on
		e.id=d.project
		inner join
		(select
		id,title as program_name from procurements.createprogram_mst)f on
		f.id=d.program
		inner
		join (select id,vendor,service from
		procurements.vendors_services)h on
		c.vendor=h.vendor inner join (select
		id,service_name from
		finance.nature_of_service)g on h.service=g.id
		inner join (select
		id,header_id from
		finance.invoice_details)i on
		a.id=i.header_id inner join (select
		id,invoice_details,document_path,document_name from
		finance.invoice_details_documents)j
		on i.id=j.invoice_details
		inner join
		(select id as cost_id,name as cost_center from hrms.cost_center_mst)k
		on c.cost_center=k.cost_id
		where
		c.voucher_id=#{voucher_id}


	</select>
	
	<select id="getByInvoiceDetails" resultType="Finance">
		select distinct
		a.hsn_sac_code,string_agg(b.tax_rate_value ::character varying,',')
		tax_rate_value,string_agg(d.tax_name::character
		varying,',')tax_name,g.id,g.workorder,g.description,g.invoice_details,g.duration_hours
		,g.duration_days,
		g.no_of_trainers,g.no_of_candidates,g.no_of_batches,g.model_rate,g.amount,h.document_name,h.document_path,i.location_name,j.gl_account_name,e.invoice_id,e.invoice_date,e.due_date,
		e.net_amount,e.amount,e.submitted_date::date,e.description,f.voucher_id,f.amount,f.credit_tax_amount,f.debit_tax_amount,f.net_amount,f.cost_center,k.name
		as createdby,
		l.workorder_id,l.workorder_amount,m.project_name,n.program_name,p.service_name
		from (select id,header_id,hsn_sac_code,gl_code from
		finance.invoice_details)a
		left join(select id,tax_rate as
		tax_rate_value,tax_account,invoice_details
		from
		finance.invoice_detail_taxes)b on a.id=b.invoice_details left
		join
		(select id,gl_account from finance.tax_accounts)c
		on b.tax_account=c.id
		left join (select id,account_name as tax_name from
		finance.gl_group_accounts_mst)d on c.gl_account=d.id inner join
		(select
		id,account_payable,invoice_id,invoice_date::date,due_date::date,amount,net_amount,
		date_created as submitted_date,description from
		finance.invoice_header)e
		on a.header_id=e.id inner join (select
		id,voucher_id,workorder,amount,credit_tax_amount,debit_tax_amount,net_amount,vendor,
		cost_center,status from finance.accounts_payable)f on
		e.account_payable=f.id inner join (select id,workorder,description,
		invoice_details,duration_hours,duration_days,no_of_trainers,no_of_candidates,no_of_batches,model_rate,amount,location
		from finance.workorder_actuals)g on f.workorder=g.workorder
		inner join
		(select id,invoice_details,document_name,document_path from
		finance.invoice_details_documents)h on a.id=h.invoice_details inner
		join
		(select id,location_name from finance.location)i on
		i.id=g.location inner
		join (select id,account_name as gl_account_name
		from
		finance.gl_group_accounts_mst)j on a.gl_code=j.id inner join
		(select
		id,name from procurements.vendors)k on f.vendor=k.id inner join
		(select id,workorder_id,amount as workorder_amount,project,program
		from
		finance.workorder)l on f.workorder=l.id inner join (select id,name
		as
		project_name from procurements.createproject_mst)m
		on l.project=m.id inner join
		(select id,title as program_name from
		procurements.createprogram_mst)n on
		n.id=l.program inner join
		(select id,vendor,service from
		procurements.vendors_services)o on f.vendor=o.vendor
		inner join (select
		id,service_name from finance.nature_of_service)p on
		o.service=p.id
		where f.voucher_id=#{voucher_id}
		group by
		a.hsn_sac_code,g.id,g.workorder,g.description,g.invoice_details,g.duration_hours,g.duration_days,
		g.no_of_trainers,g.no_of_batches,g.model_rate,g.amount,h.document_name,h.document_path,i.location_name,j.gl_account_name,e.invoice_id,e.invoice_date,e.due_date,
		e.net_amount,e.amount,e.submitted_date::date,e.description,f.voucher_id,f.amount,f.credit_tax_amount,f.debit_tax_amount,f.net_amount,f.cost_center,k.name
		,l.workorder_id,l.workorder_amount,m.project_name,n.program_name,p.service_name,g.no_of_candidates
	</select>
	
	<select id="getByPendingDetailsdata" resultType="Finance">
		<!-- select a.invoice_id,a.invoice_date,a.due_date,a.net_amount,a.submitted_date::date,b.name 
			as createdby, c.voucher_id,c.amount,c.credit_tax_amount,c.debit_tax_amount,c.net_amount,c.cost_center,d.workorder_id,d.amount 
			as workorder_amount, e.project_name,f.program_name,g.service_name from (select 
			id,invoice_id,account_payable,invoice_date,due_date,net_amount,date_created 
			as submitted_date from finance.invoice_header)a inner join (select id,voucher_id,amount,credit_tax_amount,debit_tax_amount,net_amount,vendor,workorder,cost_center,status,select 
			sum(amount) as invoice_amounts from finance.accounts_payable where status!=1)c 
			on c.id=a.account_payable inner join (select id,name from procurements.vendors)b 
			on c.vendor=b.id inner join (select id,workorder_id, amount,project,program 
			from finance.workorder)d on c.workorder=d.id inner join (select id,name as 
			project_name from finance.project)e on e.id=d.project inner join (select 
			id,title as program_name from finance.program)f on f.id=d.program inner join 
			(select id,vendor,service from finance.vendor_services)h on c.vendor=h.vendor 
			inner join (select id,service_name from operations.vender_service_nature_mst)g on h.service=g.id 
			where c.voucher_id=#{voucher_id} and c.workorder=#{workorder} -->

		select distinct a.id as voucher,a.voucher_id as voucher_id,a.cost_center as
		cost_center,b.workorder_id as workorder_id,b.amount as
		workorder_amount,c.name as project_name,
		d.title as program_name,e.vendor as createdby,f.invoice_id as
		invoice_id,f.invoice_date as invoice_date,f.due_date as due_date,
		f.net_amount as
		net_amount,f.submitted_date,b.project,b.program,b.vendor,a.credit_tax_amount,a.debit_tax_amount,a.workorder
		from
		(select
		id,voucher_id,service,program,workorder,vendor,cost_center,amount,status,created_by,date_created,credit_tax_amount,debit_tax_amount
		from finance.accounts_payable where voucher_id=#{voucher_id}) a
		inner join
		(select id,workorder_id,project,program,vendor,amount from finance.workorder)
		b on (a.workorder = b.id)
		inner join
		(select id,project_name as name from procurements.createproject_mst) c on (c.id = b.project)
		inner join
		(select id,title from finance.program) d on (d.id = b.program)
		inner join
		(select id,name as vendor from procurements.vendors) e on (e.id =
		b.vendor)
		inner join
		(select
		id,account_payable,invoice_id,invoice_date,due_date,net_amount,date_created
		:: date as submitted_date,created_by
		from finance.invoice_header) f on (f.account_payable = a.id)   

	</select>

	<select id="getPaymentDetails" resultType="Finance">
		select distinct
		amount,credit_tax_amount,debit_tax_amount,net_amount from
		finance.accounts_payable where voucher_id=#{voucher_id}
	</select>
	
	
	<select id="getItemDetails" resultType="map" parameterType="map">
		select distinct
		a.id,a.gl_account_name,b.gl_code,b.title_description,b.amount,e.document_path,e.document_name
		from (select
		id,account_name as gl_account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_code,item_description as title_description,amount,header_id from
		finance.invoice_details)b
		on a.id=b.gl_code inner join(select
		id,account_payable from
		finance.invoice_header)c on c.id=b.header_id
		inner join (select
		id,voucher_id from finance.accounts_payable)d
		on
		c.account_payable=d.id inner join (select
		id,invoice_details,document_path,document_name from
		finance.invoice_details_documents)e
		on b.id=e.invoice_details where
		d.voucher_id=#{voucher_id}
	</select>
	
		<select id="getJournalEntryDetails" resultType="map"
		parameterType="map">
		select distinct id,voucher_id,credit_tax_amount as credit_amount,debit_tax_amount as
		debit_amount
		from finance.accounts_payable where voucher_id=#{voucher_id}
	</select>


	<select id="getDocumentDetails" resultType="map"
		parameterType="map">
		select distinct
		e.document_path,e.document_name from
		(select
		id,header_id from
		finance.invoice_details)b
		inner join(select
		id,account_payable from
		finance.invoice_header)c on c.id=b.header_id
		inner join (select
		id,voucher_id from finance.accounts_payable)d
		on
		c.account_payable=d.id inner join (select
		id,invoice_details,document_path,document_name from
		finance.invoice_details_documents)e
		on b.id=e.invoice_details where
		d.voucher_id=#{voucher_id}
	</select>

	<select id="getCommentDetails" resultType="map"
		parameterType="map">
		select distinct
		a.commented_by,a.comment,a.date_created,a.account_payable,b.name from
		(select commented_by,comment,to_char(date_created,'dd-MM-YYYY HH:mi:SS') as
		date_created,account_payable from
		finance.invoice_comments)a inner join (select
		id,concat(first_name,' ',last_name) as name from
		hrms.employee_personal_details) b on a.commented_by=b.id inner join
		(select id,voucher_id from finance.accounts_payable)c
		on
		a.account_payable=c.id where c.voucher_id=#{voucher_id}
	</select>


	<select id="getTimelineDetails" resultType="map"
		parameterType="map">
		select distinct a.id,a.accounts_payable,(case when
		a.status=1 then
		c.vendor
		when a.status!=1 then e.name end) as
		created_by,a.date_created,d.invoice_name
		from (select
		id,accounts_payable,status,created_by,to_char(date_created,'dd-MM-YYYY
		HH:mi:SS') as
		date_created from
		finance.invoice_status_history)a inner
		join(select
		id,voucher_id,vendor from finance.accounts_payable)b on
		a.accounts_payable=b.id inner join
		(select id,name as vendor from
		procurements.vendors)c on b.vendor=c.id inner join
		(select
		id,concat(first_name,' ',last_name) as name from
		hrms.employee_personal_details)e on e.id=a.created_by inner
		join(select invoice_status,invoice_name from finance.invoice_status)d
		on a.status=d.invoice_status where b.voucher_id=#{voucher_id}

	</select>

	<select id="getPreviousInvoiceDetails" resultType="map"
		parameterType="map">
		select distinct
		a.id,a.workorder,a.voucher_id,a.amount,a.credit_tax_amount,a.debit_tax_amount,a.net_amount,b.id,b.workorder_id,c.status
		from (select
		id,workorder,voucher_id,amount,credit_tax_amount,debit_tax_amount,net_amount,status
		from finance.accounts_payable)a
		inner join(select id,workorder_id from finance.workorder)b on
		a.workorder=b.id inner join (select invoice_status,invoice_name as
		status from finance.invoice_status)c on a.status=c.invoice_status
		where a.workorder=#{workorder} and a.status !=1
	</select>
	
	<select id="getTaxDetails" resultType="map" parameterType="map">
		select distinct a.id,a.voucher_id,(case when c.account_type=0 then
		a.credit_tax_amount end) as credit,
		(case when c.account_type=1 then
		a.debit_tax_amount end) as
		debit,b.tax_account,c.id,c.account_type,c.gl_account,d.id,d.account_name
		from(select id,vendor,voucher_id,
		credit_tax_amount,debit_tax_amount
		from finance.accounts_payable)a inner join(select
		id,vendor,tax_account
		from finance.vendor_tax_account_mapping)b
		on
		a.vendor=b.vendor inner join (select id,account_type,gl_account from
		finance.tax_accounts)c on c.id=b.tax_account
		inner join (select
		id,account_name from finance.gl_group_accounts_mst)d on
		d.id=c.gl_account where a.voucher_id=#{voucher_id}
	</select>
	
	
	<select id="getAccountDetails" resultType="java.util.Map">
		select distinct
		a.id,a.account_name,b.gl_code,b.amount as debit from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_code,amount,header_id from
		finance.invoice_details)b
		on
		a.id=b.gl_code inner join(select id,account_payable from
		finance.invoice_header)c on c.id=b.header_id inner join (select
		id,voucher_id from finance.accounts_payable)d
		on c.account_payable=d.id
		where d.voucher_id=#{voucher_id} order by debit
	</select>

	<select id="getTaxesDetails" resultType="java.util.Map">
		select distinct
		a.id,a.voucher_id,(case when c.account_type=0 then
		a.credit_tax_amount
		end) as credit,
		(case when c.account_type=1 then
		a.debit_tax_amount end)
		as
		debit,b.tax_account,c.id,c.account_type,c.gl_account,d.id,d.account_name
		from(select id,vendor,voucher_id,
		credit_tax_amount,debit_tax_amount
		from finance.accounts_payable)a inner join(select
		id,vendor,tax_account
		from finance.vendor_tax_account_mapping)b     
		on
		a.vendor=b.vendor inner join (select id,account_type,gl_account from
		finance.tax_accounts)c on c.id=b.tax_account
		inner join (select
		id,account_name from finance.gl_group_accounts_mst)d on
		d.id=c.gl_account where a.voucher_id=#{voucher_id} order by debit
	</select>

	<select id="getvendorDetails" resultType="java.util.Map">
		select distinct
		a.id,a.vendor,a.voucher_id,a.net_amount as credit,b.id,b.name as
		account_name from(select id,vendor,voucher_id,net_amount
		from
		finance.accounts_payable)a inner join (select id,name from
		procurements.vendors)b on a.vendor=b.id where a.voucher_id=#{voucher_id} 
	</select>
	
	<select id="getVendorDetails" resultType="map">   
		select id as
		vendor_id,name from procurements.vendors where approved_status='TRUE';
	</select>
	
	<insert id="saveComments" parameterType="map">
		INSERT INTO
		finance.invoice_comments(
		account_payable, comment)
		VALUES ((select id
		from finance.accounts_payable where
		status=1),#{p.comments});

	</insert>

	<!-- booking invoice in accounts payable view page -->

	<select id="getJVid" resultType="java.lang.Integer">
		SELECT max(id) as jvid from
		finance.journal_entry_header;
	</select>

	<insert id="bookaccountspayableinvoice" parameterType="map">
		insert into finance.journal_entry_header
		(voucher_number,program,project,work_order,date,entry_type,expense_type,
		debit_amount,credit_amount,status)
		values(('JV-' || '' || #{date} || '' || #{month} || '' || #{year} ||lpad(CAST(
		#{id} AS character varying ),3,'0')),
		#{p.program},#{p.project},#{p.workorder},#{p.date},1,0,#{p.debit_tax_amount},#{p.credit_tax_amount},7);
	</insert>

	<insert id="bookaccountspayableinvoicepayable"
		parameterType="map">
		insert into finance.journal_payables
		(journal_entry_header,accounts_payable,program,entry_type)
		values(#{jvid},#{p.voucher},#{p.program},1);
	</insert>

	<select id="getjouranlentrydata" resultType="Finance">
		<!-- select voucher_number,date as voucher_date from finance.journal_entry_header 
			where id = #{jvid}; -->
		select distinct a.voucher_number,a.date as
		voucher_date,c.invoice_id,c.invoice_date,c.due_date,e.name,c.description
		from
		(select voucher_number,date,id from finance.journal_entry_header
		where id = #{jvid}) a inner join
		(select journal_entry_header,id,accounts_payable from
		finance.journal_payables) b on (a.id = b.journal_entry_header) inner
		join
		(select id,account_payable,invoice_id,invoice_date,due_date,description from
		finance.invoice_header) c on (c.account_payable = b.accounts_payable)
		inner join (select voucher_id,id,vendor from finance.accounts_payable)
		d on (d.id = b.accounts_payable) inner join
		(select id,name from procurements.vendors) e on (e.id = d.vendor)
	</select>

	<!-- /* getting payment release page details */ -->
	<select id="getpaymentdetails" resultType="Finance">
		select
		a.voucher_number,f.name,e.workorder_id,d.invoice_id,d.invoice_date,d.due_date,d.net_amount,c.net_amount,c.vendor,b.journal_entry_header,c.voucher_id
		from
		(select voucher_number,id from finance.journal_entry_header where
		voucher_number = #{voucher_number}) a inner join
		(select
		id,journal_entry_header,accounts_payable from
		finance.journal_payables) b on (a.id = b.journal_entry_header) inner
		join
		(select voucher_id,id,workorder,vendor,net_amount from
		finance.accounts_payable) c on (c.id = b.accounts_payable) inner join
		(select id,account_payable,invoice_id,invoice_date,due_date,net_amount
		from finance.invoice_header) d on
		(d.account_payable = b.accounts_payable) inner join
		(select id,workorder_id from
		finance.workorder) e on (e.id = c.workorder) inner join
		(select id,name from procurements.vendors) f on (f.id = c.vendor)
	</select>
	
	<!-- /* getting partial payment release page details */ -->
	<select id="getPartialpaydet" resultType="Finance">    
	select distinct a.voucher_number,f.name,e.workorder_id,d.invoice_id,d.invoice_date,d.due_date,d.net_amount,c.net_amount,c.vendor,b.journal_entry_header,c.voucher_id from
		(select voucher_number,id from finance.journal_entry_header where voucher_number = #{voucher_number}) a inner join
		(select id,journal_entry_header,accounts_payable from finance.journal_payables) b on (a.id = b.journal_entry_header) inner join
		(select voucher_id,id,workorder,vendor,net_amount from finance.accounts_payable) c on (c.id = b.accounts_payable) inner join
		(select id,account_payable,invoice_id,invoice_date,due_date,net_amount from finance.invoice_header) d on 
		(d.account_payable = b.accounts_payable) inner join
		(select id,workorder_id from finance.workorder) e on (e.id = c.workorder) inner join 
		(select id,name from procurements.vendors) f on (f.id = c.vendor)
	</select>

	<!-- /* releasing payment to vendor */ -->
	<insert id="Releasepaymenttovendor" parameterType="map">
		insert into
		finance.payments(vendor,bank_gl_account,amount,description,payment_date,signature_one,signature_two,diff_amount)
		values(#{p.vendor},#{p.bank_gl_account},#{p.amount},#{p.description},#{p.payment_date},#{p.signature_one},
		#{p.signature_two},#{p.diff_amount});
	</insert>
	
	<!-- reference_number,#{p.reference_number}, -->

	<select id="getYearpayment" resultType="java.lang.Integer">
		SELECT
		(cast(cast(EXTRACT(year FROM CURRENT_TIMESTAMP) as varchar) as
		integer)) as year;
	</select>

	<select id="getMonthpayment" resultType="java.lang.Integer">
		SELECT
		(cast(cast(EXTRACT(month FROM CURRENT_TIMESTAMP) as varchar) as
		integer)) as month;
	</select>

	<select id="getDatepayment" resultType="java.lang.Integer">
		SELECT
		(cast(cast(EXTRACT(day FROM CURRENT_TIMESTAMP) as varchar) as
		integer)) as date;
	</select>

	<select id="getCountbankadvice" resultType="java.lang.Integer">
		SELECT count(id)+1 as
		count from finance.bank_advice;
	</select>

	<select id="getpaymentid" resultType="java.lang.Integer">
		SELECT max(id) as
		payementid from finance.payments;
	</select>

	<insert id="Releasepaymentbankadvice" parameterType="map">
		insert into finance.bank_advice (bank_advice_id,payment)
		values(('BA-' || '' || #{date} || '' || #{month} || '' || #{year} ||lpad(CAST(
		#{id} AS character varying ),3,'0')),
		#{payementid});
	</insert>

	<insert id="Releasepaymentpaymentsdetails" parameterType="map">
		insert
		into finance.payment_details (payments,journal_entry_header)
		values(#{payementid},#{p.journal_entry_header});
	</insert>

	<update id="updatejournalpayables" parameterType="map">
		update finance.journal_payables SET entry_type=2,paid_amount = #{p.amount}
		WHERE journal_entry_header=#{p.journal_entry_header};
	</update>

	<update id="updatejournalaccountspayables" parameterType="map">
		update finance.journal_payables SET status= (case when net_amount >
		#{p.amount} then 9 when #{p.amount} = net_amount then 8 end) WHERE
		journal_entry_header=#{p.journal_entry_header};
		<!-- update finance.invoice_header SET status= (case when net_amount > 
			#{p.amount} then 9 when #{p.amount} = net_amount then 8 end) WHERE invoice_id=#{p.invoice_id}; -->
	</update>

	<update id="updatejournalinvoiceheader" parameterType="map">
		update finance.invoice_header SET status= (case when net_amount >
		#{p.amount} then 9 when #{p.amount} = net_amount then 8 end) WHERE
		invoice_id=#{p.invoice_id};
	</update>
	
	<update id="updateAccountsPayablestatus" parameterType="map">
		update finance.accounts_payable SET status= (case when net_amount >
		#{p.amount} then 9 when #{p.amount} = net_amount then 8 end) WHERE
		voucher_id=#{p.voucher_id};
	</update>

	<update id="updatepaymentjournalentryheader" parameterType="map">
		update finance.journal_entry_header SET entry_type=2,status= (case
		when net_amount > #{p.amount} then 9 when #{p.amount} = net_amount
		then 8 end) WHERE voucher_number=#{p.voucher_number};
	</update>

	<!-- getting all bank payments to table in bank payment page -->
	<select id="getallbankpaymentsdata" resultType="Finance">
		select distinct e.voucher_number,b.name as vendor_name,c.bank_name,a.amount,a.payment_date from
		(select id,vendor,bank_gl_account,amount,payment_date from finance.payments) a inner join
		(select id,name from procurements.vendors) b on (b.id = a.vendor) inner join
		(select id,bank_name from finance.bank_account_details) c on (c.id = a.bank_gl_account) inner join
		(select * from finance.payment_details) d on (d.payments = a.id) inner join
		(select id,voucher_number,status from finance.journal_entry_header) e on (e.id = d.journal_entry_header) inner join 
		(select id,journal_entry_header,accounts_payable from finance.journal_payables) f on (f.journal_entry_header = e.id) inner join
		(select id,status from finance.accounts_payable where status = 8) g on (g.id = f.accounts_payable)
	</select>

	<!-- getting data in bank payments view page -->
	<select id="getBankpaymentsdata" resultType="Finance">
		select distinct
		a.voucher_number,c.payment_date,c.signature_one,c.signature_two,d.name,e.bank_name,c.description
		from
		(select id,voucher_number from finance.journal_entry_header where
		voucher_number = #{voucher_number}) a inner join
		(select journal_entry_header,payments,id from finance.payment_details) b on
		(b.journal_entry_header = a.id) inner join
		(select
		id,vendor,payment_date,bank_gl_account,signature_one,signature_two,description
		from finance.payments) c on (c.id = b.payments) inner join
		(select id,name from procurements.vendors) d on (d.id = c.vendor) inner join
		(select id,bank_name from finance.bank_account_details) e on (e.id =
		c.bank_gl_account)
	</select>

	<!-- getting payment bank details to view page table in bank payments -->
	<select id="getVendorpaymentDetails" resultType="java.util.Map">
		select a.voucher_number,c.net_amount as debit,g.name as account_name from
		(select id,voucher_number from finance.journal_entry_header where
		voucher_number = #{voucher_number}) a inner join
		(select id,journal_entry_header,accounts_payable,paid_amount from
		finance.journal_payables) b on (b.journal_entry_header = a.id) inner
		join
		(select id,vendor,net_amount from finance.accounts_payable) c on
		(c.id = b.accounts_payable) inner join
		(select
		payments,id,journal_entry_header from finance.payment_details) d on
		(d.journal_entry_header = a.id) inner join
		(select id,name from
		procurements.vendors) g on (g.id = c.vendor)
	</select>

	<select id="getBankpaymentDetails" resultType="java.util.Map">
		select distinct a.voucher_number,b.paid_amount as credit,f.account_name from
		(select
		id,voucher_number from finance.journal_entry_header where
		voucher_number = #{voucher_number}) a inner join
		(select id,journal_entry_header,accounts_payable,paid_amount from
		finance.journal_payables) b on (b.journal_entry_header = a.id) inner
		join
		(select id,vendor,net_amount from finance.accounts_payable) c on
		(c.id = b.accounts_payable) inner join
		(select
		payments,id,journal_entry_header from finance.payment_details) d on
		(d.journal_entry_header = a.id) inner join
		(select
		bank_gl_account,id,amount,vendor from finance.payments) e on (e.id =
		d.payments) inner join
		(select id,concat(bank_name,' ',account_number) as account_name from
		finance.bank_account_details) f on (f.id = e.bank_gl_account)
	</select>

	<!-- getting all booked invoices to table in booked invoice page -->
	<select id="getallbookedinvoicesData" resultType="Finance">
	select distinct a.voucher_id,a.order_type as
		ordertype,f.date,c.workorder_id,b.name,d.invoice_name from
		(select
		id,voucher_id,(case when order_type = 1 then 'Work Order' when
		order_type = 2 then 'Other' end) as order_type,
		workorder,vendor,date_created :: date as date_created,status from
		finance.accounts_payable  where status = 7) a inner join
		(select id,name
		from procurements.vendors) b on (a.vendor = b.id) inner join
		(select
		id,workorder_id from finance.workorder) c on (c.id = a.workorder)
		inner join
		(select invoice_status,invoice_name from finance.invoice_status) d on
		(d.invoice_status = a.status) inner join
		(select id,journal_entry_header,accounts_payable from
		finance.journal_payables) e on (e.accounts_payable = a.id) inner join
		(select id,date from finance.journal_entry_header) f on (f.id =
		e.journal_entry_header) inner join		
		(select id,status,account_payable from finance.invoice_header) i on (i.account_payable = a.id)
	</select>

	<select id="getJouranlentrydata" resultType="Finance">
		select distinct c.voucher_number,a.voucher_id,c.date as
		voucher_date,e.name,d.invoice_id,d.invoice_date,d.due_date,d.description
		from
		(select id,voucher_id,vendor from finance.accounts_payable where
		voucher_id = #{voucher_id}) a inner join
		(select id,journal_entry_header,accounts_payable from
		finance.journal_payables) b on (a.id = b.accounts_payable) inner join
		(select id,voucher_number,date from finance.journal_entry_header) c on
		(c.id = b.journal_entry_header) inner join
		(select id,invoice_id,account_payable,invoice_date,due_date,description from
		finance.invoice_header) d on (d.account_payable = a.id) inner join
		(select id,name from procurements.vendors) e on (e.id = a.vendor)

	</select>

	<!-- getting all partially paid invoices to table in booked invoice page -->
	<select id="getallpartiallypaidinvoices" resultType="Finance">
		select distinct a.voucher_id,a.ordertype,c.workorder_id,b.name,d.invoice_name,h.payment_date,f.voucher_number from
		(select id,voucher_id,(case when order_type = 0 then 'Work Order' when order_type = 1 then 'Other' end) as ordertype,
		workorder,vendor,status from finance.accounts_payable) a inner join
		(select id,name from procurements.vendors) b on (a.vendor = b.id) inner join
		(select id,workorder_id from finance.workorder) c on (c.id = a.workorder) inner join
		(select invoice_status,invoice_name from finance.invoice_status) d on (d.invoice_status = a.status) inner join
		(select id,journal_entry_header,accounts_payable from finance.journal_payables) e on (e.accounts_payable = a.id) inner join
		(select id,date,voucher_number from finance.journal_entry_header) f on (f.id = e.journal_entry_header) inner join
		(select payments,id,journal_entry_header from finance.payment_details) g on
		(g.journal_entry_header = f.id) inner join
		(select id,payment_date from
		finance.payments) h on (h.id = g.payments) inner join
		(select id,status,account_payable from finance.invoice_header where status = 9) i on (i.account_payable = a.id)
	</select>
	
	         
	
	   
	<!-- finance admin gl accounts -->
	
	
	<select id="getGLHeads" resultType="map">
		SELECT distinct id as head_id, gl_head_name from finance.gl_heads_mst order by id;
	</select> 
	
	<select id="getIncomeHeads" resultType="map">  
		SELECT distinct id as income_id, income_head_name from finance.income_heads_mst order by id;
	</select>     
	
	<select id="getAssetClass" resultType="map">
		SELECT distinct id as asset_id, name as asset_name from finance.asset_class_mst order by id;
	</select>
	<select id="getAssetNature" parameterType="java.lang.Integer" resultType="Finance">
	    SELECT distinct id as nature_id, name as asset_nature_name from finance.asset_nature_mst where asset_class=#{p.asset_id} order by id;
	</select>
	
	<select id="getLiability" resultType="map">
		SELECT distinct id as liability_id, liabilities_subhead from finance.equity_liabilities_mst order by id;
	</select>
	
	<select id="getAllGLgroups" resultType="map">
	select distinct a.id,a.group_name,b.account_type as accounttype ,(case when a.account_type = 1 then c.gl_head_name 
		when a.account_type=2 then d.income_head_name when a.account_type=3 then e.name when a.account_type=4 then 
		f.liabilities_subhead end) as particulars,(case when a.account_type=3 then g.name end) as asset_nature_name,
		(case when status='TRUE' then 'Active' when status='FALSE' then 'Inactive' end) as approvestatus from 
		(select id,group_name,account_type,gl_heads_group,income_heads,asset_class,asset_nature,liability,status 
		from finance.gl_group_mst) a left join
		(select id,account_type from finance.account_type_mst)b on a.account_type=b.id left join 
		(select id,gl_head_name from finance.gl_heads_mst)c on a.gl_heads_group=c.id left join
		(select id,income_head_name from finance.income_heads_mst)d on a.income_heads=d.id left join 
		(select id,name from finance.asset_class_mst)e on a.asset_class=e.id left join
		(select id,liabilities_subhead from finance.equity_liabilities_mst)f on a.liability=f.id left join
		(select id,name,asset_class from finance.asset_nature_mst)g on a.asset_nature=g.id and e.id=g.asset_class
	</select> 
	<select id="getByGLGroup" resultType="Finance">       
	select id,group_name as group_name1,account_type as type_id1,gl_heads_group as head_id1,income_heads as income_id1,asset_class as asset_id, asset_nature as nature_id,
		liability as liability_id1,status from finance.gl_group_mst where id = #{id}  
	</select>
	
	<update id="updateData"  parameterType="map">   
	update finance.gl_group_mst SET group_name = #{p.group_name1},account_type = #{p.type_id1},gl_heads_group=#{p.head_id1}, income_heads=#{p.income_id1},asset_class=#{p.asset_id},asset_nature= #{p.nature_id},
	liability=#{p.liability_id1},status=#{p.status}
	 WHERE id=#{p.id};                        
	</update>  
	
	 <insert id="saveGLgroupDetails" parameterType="map">   
	  INSERT INTO finance.gl_group_mst(
          group_name, account_type, gl_heads_group, income_heads, asset_class, 
          asset_nature, liability, asset_group)
          VALUES (#{p.group_name}, #{p.type_id},#{p.head_id}, #{p.income_id}, #{p.asset_id}, 
          #{p.nature_id}, #{p.liability_id}, (select id from finance.asset_group_mst where asset_nature=#{p.nature_id}));	   
	</insert> 
	
	<select id="getGLGroup" resultType="map">   
		SELECT distinct id as group_id, group_name from finance.gl_group_mst order by id;
	</select>
	
		<select id="getAllGLSubgroups" resultType="map">
	  SELECT distinct a.id,a.subgroup_name,b.group_name,a.status,a.gl_group_name from 
	  	(select id,name as subgroup_name,gl_group_name,(case when status='TRUE' then 'Active' when status='FALSE' 
	  	then 'Inactive' end) as status from finance.gl_sub_group_mst)a inner join 
	  	(select id,group_name from finance.gl_group_mst)b on a.gl_group_name=b.id
	 </select>
	 
	    <select id="getByGLSubGroup" resultType="map">   
		SELECT distinct id as subgroup_id, name as subgroup_name from finance.gl_sub_group_mst order by id;
	</select>
	
	<select id="getGLSubGroup" resultType="map">   
		SELECT distinct id as subgroup_id, name as subgroup_name from finance.gl_sub_group_mst order by id;
	</select>
	
	<select id="getAllGLAccount" resultType="map">
	  SELECT distinct a.id,a.account_name,c.subgroup_name,b.group_name,a.status as approvestatus from (select id,account_name,gl_group,gl_sub_group,(case when status='TRUE' then 'Active'
		when status='FALSE' then 'Inactive' end) as status from finance.gl_group_accounts_mst)a
		inner join 
		(select id,group_name from finance.gl_group_mst)b on a.gl_group=b.id 
		inner join
		(select id,name as subgroup_name from finance.gl_sub_group_mst)c on a.gl_sub_group=c.id		
	  </select> 
	
	
	<select id="getAccountType" resultType="map">
		SELECT distinct id, account_type as accounttype from finance.account_type_mst order by id;
	</select>    
	
	<!-- updating JE -->   
		<update id="updateJVHEAD" parameterType="map">
	update finance.journal_entry_header SET project=#{p.project},work_order=#{p.work_order},
	expense_type = #{p.expense_type},debit_amount = #{p.debit_amount},credit_amount = #{p.credit_amount}
	WHERE voucher_number=#{p.voucher_number};
	</update>
	
	<update id="updateJVDET" parameterType="map">
	update finance.journal_entry_details SET gl_account = #{p.gl_account},cost_center=#{p.cost_center},description=#{p.description}
	WHERE journal_entry_header=#{p.journal_entry_header};
	</update>
	
	<!-- updating bills -->
	<update id="updateBills" parameterType="map">
		update finance.claim_reimbursment SET project=#{p.project},description=#{p.description} 
		WHERE claim_reimbursement_id=#{p.claim_reimbursement_id};
	</update>
	
	<update id="updateBillsDET" parameterType="map">
		update finance.claim_reimbursment_details SET gl_account=#{p.gl_account},name=#{p.name},
		amount = #{p.amount},claim_type = #{p.claim_type},details_date = #{p.details_date},location = #{p.location_id}
		WHERE claim_id=#{p.claim_id};
	</update>
	
	


	     
	
	<!-- <select id="getFinancialYear" resultType="map">
		SELECT id as
		financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst;
	</select> -->
	<select id="getGLAccount" resultType="map">
		select distinct
		a.glid,a.gl_account_name from(select id as glid,account_name as
		gl_account_name from finance.gl_group_accounts_mst)a
		inner join
		(select
		id,header_id,hsn_sac_code,gl_code from finance.invoice_details)b on
		a.glid=b.gl_code
	</select>

	<select id="getTaxes" resultType="map">
		select distinct
		a.tax_rate_value,c.tax_name from(select id,tax_rate as
		tax_rate_value,tax_account,invoice_details
		from
		finance.invoice_detail_taxes)a left join (select id,gl_account from
		finance.tax_accounts)b
		on a.tax_account=b.id left join (select
		id,account_name as tax_name from
		finance.gl_group_accounts_mst)c on
		b.gl_account=c.id
	</select>

	<select id="getInvoiceChecks" resultType="map">
		select id as
		check_id,invoice_check_name from finance.item_checks;
	</select>
	<insert id="saveChecks" parameterType="map">
		INSERT INTO
		finance.invoice_check_list(
		account_payable, check_id, check_name)
		VALUES ((select id from finance.accounts_payable where
		status=1),#{p.check_id},#{p.invoice_check_name});


	</insert>
	<update id="updateData1" parameterType="map">
		UPDATE
		finance.invoice_header
		SET invoice_id=#{p.invoice_id},
		invoice_date=#{p.invoice_date},
		due_date=#{p.due_date},
		description=#{p.description}
		WHERE id=#{p.id};

	</update>

	<update id="updateData2" parameterType="map">
		UPDATE
		finance.accounts_payable
		SET cost_center=#{p.cost_id}
		WHERE
		voucher_id=#{p.voucher_id}

	</update>
	<update id="updateData3" parameterType="map">
		UPDATE
		finance.workorder_actuals
		SET
		duration_hours=#{p.duration_hours},
		duration_days=#{p.duration_days},no_of_trainers=#{p.no_of_trainers},
		no_of_candidates=#{p.no_of_candidates},
		no_of_batches=#{p.no_of_batches}, model_rate=#{p.model_rate},
		amount=#{p.amount}

		WHERE workorder=#{p.workorder};


	</update>

	<select id="getInvoiceDetails" resultType="map"
		parameterType="map">  
		select a.id as invoiceid,a.voucher_id from (select
		id,voucher_id,vendor from
		finance.accounts_payable)a
		inner join(select
		id as vendor_id,name from procurements.vendors)b on
		a.vendor=b.vendor_id
		where b.vendor_id=#{vendor_id};
	</select>
	
	<select id="getWorkorderDetails" resultType="map"
		parameterType="map">
		select a.id as workorderid,a.workorder_id from(select
		id,workorder_id,vendor
		from finance.workorder)a
		inner join(select id as
		vendor_id,name from procurements.vendors)b on
		a.vendor=b.vendor_id where
		b.vendor_id=#{vendor_id};

	</select>
	<select id="getPurchaseorderDetails" resultType="map"
		parameterType="map">
		select a.id as purchaseorderid,a.purchaseorder_id
		from(select
		id,purchaseorder_id,vendor_id from procurements.purchase_order)a
		inner join(select id as vendor_id,name from procurements.vendors)b on
		a.vendor_id=b.vendor_id where b.vendor_id=#{vendor_id};
	</select>
	<select id="getMouDetails" resultType="map" parameterType="map">
		select a.id as mouid,a.mou_id from (select id,mou_id,vendor from
		procurements.mou)a
		inner join(select id as vendor_id,name from
		procurements.vendors)b on        
		a.vendor=b.vendor_id where
		b.vendor_id=#{vendor_id};
	</select>
	<select id="getNotefileDetails" resultType="java.util.Map">
		select id as
		notefileid,note_generated_id from finance.note_file_request;
	</select>
	<!-- INVOICE -->
	<select id="getInvoiceCount" resultType="java.util.Map">
		select count(voucher_id)
		as invoicecount,id,vendor from
		finance.accounts_payable where
		id=#{invoiceid} and vendor=#{vendor_id}
		group by id,vendor
	</select>
	<select id="getReportingCount" resultType="java.util.Map">
		select
		count(voucher_id) as reportingcount,id,vendor from
		finance.accounts_payable where status=1 and id=#{invoiceid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getCFOCount" resultType="java.util.Map">
		select count(voucher_id) as
		cfocount,id,vendor from finance.accounts_payable where status=16 and
		id=#{invoiceid} and vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getFinanceCount" resultType="java.util.Map">
		select count(voucher_id)
		as financecount,id,vendor from finance.accounts_payable where status=4
		and id=#{invoiceid} and vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getPaymentCount" resultType="java.util.Map">
		select count(voucher_id)
		as paymentcount,id,vendor from finance.accounts_payable where status=6
		and id=#{invoiceid} and vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getBookedCount" resultType="java.util.Map">
		select count(voucher_id)
		as bookedcount,id,vendor from finance.accounts_payable where status=7
		and id=#{invoiceid} and vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getReleaseCount" resultType="java.util.Map">
		select count(voucher_id)
		as releasecount,id,vendor from finance.accounts_payable where status
		in(8,9) and id=#{invoiceid} and vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getHoldCount" resultType="java.util.Map">
		select count(voucher_id) as
		holdcount,id,vendor from finance.accounts_payable where status=5 and
		id=#{invoiceid} and vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getReturnCount" resultType="java.util.Map">
		select count(voucher_id)
		as returnedcount,id,vendor from finance.accounts_payable where status
		in(12,13,14) and id=#{invoiceid} and vendor=#{vendor_id} group by
		id,vendor

	</select>
	<select id="getInvoiceTotalData" resultType="java.util.Map">
		select distinct
		a.id,a.voucher_id,g.order_name,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as     
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join
		(select empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid
		where
		a.id=#{invoiceid} and a.vendor=#{vendor_id}

	</select>
	<select id="getTotalReportingData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select
		empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status=1

	</select>

	<select id="getTotalBookedData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select
		empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status=7

	</select>

	<select id="getTotalFinanceData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select
		empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status=4

	</select>

	<select id="getTotalReleasedData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select
		empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status in (8,9)

	</select>

	<select id="getTotalPaymentData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select
		empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status=6

	</select>

	<select id="getTotalPendingData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select
		empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status=16

	</select>

	<select id="getTotalHoldData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status=5

	</select>

	<select id="getTotalReturnedData" resultType="java.util.Map">
		select distinct
		g.order_name,a.id,a.voucher_id,a.order_type,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,voucher_id,
		order_type,date_created,created_by,modified_by,next_approver,amount,status,vendor
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,order_name from finance.order_type_mst)g on a.order_type=g.id
		inner
		join
		(select id,invoice_status,invoice_name as status from
		finance.invoice_status)c on a.status=c.invoice_status left join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select empid,concat(first_name,' ',last_name) as created_by from
		hrms.employee_personal_details)e on a.created_by=e.empid
		left join (select
		empid,concat(first_name,' ',last_name) as next_approver
		from
		hrms.employee_personal_details)f on a.next_approver=f.empid where
		a.id=#{invoiceid} and a.vendor=#{vendor_id} and a.status in (12,13,14)

	</select>

	<!-- WORKORDER -->
	<select id="getWorkorderCount" resultType="java.util.Map">
		select distinct
		count(workorder_id) as workordercount,id,vendor from
		finance.workorder
		where id=#{workorderid} and vendor=#{vendor_id}
		group by id,vendor
	</select>
	<select id="getWorkorderReportingCount"
		resultType="java.util.Map">
		select
		count(workorder_id) as
		workorderreportingcount,id,vendor from
		finance.workorder where status=1
		and id=#{workorderid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getWorkorderCFOCount" resultType="java.util.Map">
		select
		count(workorder_id) as
		workordercfocount,id,vendor from
		finance.workorder where status=1 and
		id=#{workorderid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getWorkorderCEOCount" resultType="java.util.Map">
		select
		count(workorder_id)
		as workorderceocount,id,vendor from
		finance.workorder where status=1
		and id=#{workorderid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getWorkorderApprovedCount"
		resultType="java.util.Map">
		select count(workorder_id)
		as
		workorderapprovedcount,id,vendor from finance.workorder where status=1
		and id=#{workorderid} and vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getWorkorderHoldCount" resultType="java.util.Map">
		select
		count(workorder_id)
		as workorderholdcount,id,vendor from
		finance.workorder where status=1
		and id=#{workorderid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getWorkorderReturnCount" resultType="java.util.Map">
		select
		count(workorder_id)
		as workorderreturnedcount,id,vendor from
		finance.workorder where status=1
		and id=#{workorderid} and vendor=#{vendor_id} group by id,vendor

	</select>

	<select id="getWorkorderTotalData" resultType="java.util.Map">
		select distinct
		a.id,a.workorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,workorder_id,
		date_created,created_by,approved_by,next_approver,amount,status,vendor
		from
		finance.workorder) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select  empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.next_approver=f.empid
		where a.id=#{workorderid} and
		a.vendor=#{vendor_id}

	</select>

	<select id="getTotalWorkorderReportingData"
		resultType="java.util.Map">
		select distinct
		a.id,a.workorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,workorder_id,
		date_created,created_by,approved_by,next_approver,amount,status,vendor
		from
		finance.workorder) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.next_approver=f.empid
		where a.id=#{workorderid} and
		a.vendor=#{vendor_id} and a.status=1

	</select>

	<select id="getTotalworkorderPendingData"
		resultType="java.util.Map">
		select distinct
		a.id,a.workorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,workorder_id,
		date_created,created_by,approved_by,next_approver,amount,status,vendor
		from
		finance.workorder) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.next_approver=f.empid
		where a.id=#{workorderid} and
		a.vendor=#{vendor_id} and a.status=1

	</select>

	<select id="getTotalWorkorderCEOData" resultType="java.util.Map">
		select distinct
		a.id,a.workorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,workorder_id,
		date_created,created_by,approved_by,next_approver,amount,status,vendor
		from
		finance.workorder) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.next_approver=f.empid
		where a.id=#{workorderid} and
		a.vendor=#{vendor_id} and a.status=1

	</select>


	<select id="getTotalApprovedData" resultType="java.util.Map">
		select distinct
		a.id,a.workorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,workorder_id,
		date_created,created_by,approved_by,next_approver,amount,status,vendor
		from
		finance.workorder) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.next_approver=f.empid
		where a.id=#{workorderid} and
		a.vendor=#{vendor_id} and a.status=1

	</select>

	<select id="getTotalWorkorderHoldData"
		resultType="java.util.Map">
		select distinct
		a.id,a.workorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,workorder_id,
		date_created,created_by,approved_by,next_approver,amount,status,vendor
		from
		finance.workorder) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.next_approver=f.empid
		where a.id=#{workorderid} and
		a.vendor=#{vendor_id} and a.status=1
	</select>

	<select id="getTotalWorkorderReturnedData"
		resultType="java.util.Map">
		select distinct
		a.id,a.workorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,workorder_id,
		date_created,created_by,approved_by,next_approver,amount,status,vendor
		from
		finance.workorder) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.next_approver=f.empid
		where a.id=#{workorderid} and
		a.vendor=#{vendor_id} and a.status=1

	</select>


	<!-- PURCHASEORDER -->

	<select id="gePurchaseorderCount" resultType="java.util.Map">
		select distinct
		count(purchaseorder_id) as purchaseordercount,id,vendor from
		procurements.purchase_order where id=#{purchaseorderid} and
		vendor=#{vendor_id}
		group by id,vendor
	</select>
	<select id="getPurchaseorderReportingCount"
		resultType="java.util.Map">
		select
		count(purchaseorder_id) as
		purchaseorderreportingcount,id,vendor from
		procurements.purchase_order where
		status=1 and id=#{purchaseorderid} and
		vendor=#{vendor_id} group by
		id,vendor

	</select>
	<select id="getPurchaseorderCFOCount" resultType="java.util.Map">
		select
		count(purchaseorder_id) as purchaseordercfocount,id,vendor from
		procurements.purchase_order where status=1 and id=#{purchaseorderid} and
		vendor=#{vendor_id} group by id,vendor
	</select>
	<select id="getPurchaseorderCEOCount" resultType="java.util.Map">
		select
		count(purchaseorder_id) as purchaseorderceocount,id,vendor from
		procurements.purchase_order where status=1 and id=#{purchaseorderid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getPurchaseorderApprovedCount"
		resultType="java.util.Map">
		select
		count(purchaseorder_id) as
		purchaseorderapprovedcount,id,vendor from
		procurements.purchase_order where
		status=1 and id=#{purchaseorderid} and
		vendor=#{vendor_id} group by
		id,vendor

	</select>
	<select id="getPurchaseorderHoldCount"
		resultType="java.util.Map">
		select
		count(purchaseorder_id) as
		purchaseorderholdcount,id,vendor from
		procurements.purchase_order where
		status=1 and id=#{purchaseorderid} and
		vendor=#{vendor_id} group by
		id,vendor

	</select>
	<select id="getPurchaseorderReturnCount"
		resultType="java.util.Map">
		select
		count(purchaseorder_id) as purchaseorderreturnedcount,id,vendor from
		procurements.purchase_order where status=1 and id=#{purchaseorderid} and
		vendor=#{vendor_id} group by id,vendor

	</select>

	<select id="getPurchaseorderTotalData"
		resultType="java.util.Map">
		select distinct
		a.id,a.purchaseorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,purchaseorder_id,
		date_created,created_by,approved_by,incharge,amount,status,vendor
		from
		procurements.purchase_order) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.incharge=f.empid
		where a.id=#{purchaseorderid} and a.vendor=#{vendor_id}

	</select>

	<select id="getTotalPurchaseorderReportingData"
		resultType="java.util.Map">
		select distinct
		a.id,a.purchaseorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,purchaseorder_id,
		date_created,created_by,approved_by,incharge,amount,status,vendor
		from
		procurements.purchase_order) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.incharge=f.empid
		where a.id=#{purchaseorderid} and a.vendor=#{vendor_id}
		and a.status=1

	</select>

	<select id="getTotalpurchaseorderPendingData"
		resultType="java.util.Map">
		select distinct
		a.id,a.purchaseorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,purchaseorder_id,
		date_created,created_by,approved_by,incharge,amount,status,vendor
		from
		procurements.purchase_order) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.incharge=f.empid
		where a.id=#{purchaseorderid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>

	<select id="getTotalPurchaseorderCEOData"
		resultType="java.util.Map">
		select distinct
		a.id,a.purchaseorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,purchaseorder_id,
		date_created,created_by,approved_by,incharge,amount,status,vendor
		from
		procurements.purchase_order) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.incharge=f.empid
		where a.id=#{purchaseorderid} and a.vendor=#{vendor_id}
		and a.status=1

	</select>


	<select id="getTotalPurchaseApprovedData"
		resultType="java.util.Map">
		select distinct
		a.id,a.purchaseorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,purchaseorder_id,
		date_created,created_by,approved_by,incharge,amount,status,vendor
		from
		procurements.purchase_order) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.incharge=f.empid
		where a.id=#{purchaseorderid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>

	<select id="getTotalPurchaseorderHoldData"
		resultType="java.util.Map">
		select distinct
		a.id,a.purchaseorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,purchaseorder_id,
		date_created,created_by,approved_by,incharge,amount,status,vendor
		from
		procurements.purchase_order) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.incharge=f.empid
		where a.id=#{purchaseorderid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>

	<select id="getTotalPurchaseorderReturnedData"
		resultType="java.util.Map">
		select distinct
		a.id,a.purchaseorder_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,purchaseorder_id,
		date_created,created_by,approved_by,incharge,amount,status,vendor
		from
		procurements.purchase_order) a inner join (select id,name as vendor_name
		from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.incharge=f.empid
		where a.id=#{purchaseorderid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>


	<!-- MOU -->

	<select id="getMOUCount" resultType="java.util.Map">
		select distinct
		count(mou_id) as moucount,id,vendor from
		procurements.mou where id=#{mouid}
		and vendor=#{vendor_id}
		group by id,vendor
	</select>
	<select id="getMOUReportingCount" resultType="java.util.Map">
		select
		count(mou_id) as moureportingcount,id,vendor from
		procurements.mou where
		status=1 and id=#{mouid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getMOUCFOCount" resultType="java.util.Map">
		select
		count(mou_id) as moucfocount,id,vendor from
		procurements.mou where status=1
		and id=#{mouid} and
		vendor=#{vendor_id} group by id,vendor
	</select>
	<select id="getMOUCEOCount" resultType="java.util.Map">
		select
		count(mou_id) as
		mouceocount,id,vendor from
		procurements.mou where status=1 and id=#{mouid}
		and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getMOUApprovedCount" resultType="java.util.Map">
		select
		count(mou_id)
		as mouapprovedcount,id,vendor from
		procurements.mou where status=1 and
		id=#{mouid} and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getMOUHoldCount" resultType="java.util.Map">
		select
		count(mou_id) as
		mouholdcount,id,vendor from
		procurements.mou where status=1 and id=#{mouid}
		and
		vendor=#{vendor_id} group by id,vendor

	</select>
	<select id="getMOUReturnCount" resultType="java.util.Map">
		select
		count(mou_id) as moureturnedcount,id,vendor from
		procurements.mou where
		status=1 and id=#{mouid} and
		vendor=#{vendor_id} group by id,vendor

	</select>

	<select id="getMOUTotalData" resultType="java.util.Map">
		select distinct
		a.id,a.mou_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,mou_id,
		date_created,created_by,approved_by,vendor_accepted,amount,status,vendor
		from
		procurements.mou) a inner join (select id,name as vendor_name from
		procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.vendor_accepted=f.empid
		where a.id=#{mouid} and a.vendor=#{vendor_id}

	</select>

	<select id="getTotalMOUReportingData" resultType="java.util.Map">
		select distinct
		a.id,a.mou_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,mou_id,
		date_created,created_by,approved_by,vendor_accepted,amount,status,vendor
		from
		procurements.mou) a inner join (select id,name as vendor_name from
		procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.vendor_accepted=f.empid
		where a.id=#{mouid} and a.vendor=#{vendor_id}
		and a.status=1

	</select>

	<select id="getTotalMOUPendingData" resultType="java.util.Map">
		select distinct
		a.id,a.mou_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,mou_id,
		date_created,created_by,approved_by,vendor_accepted,amount,status,vendor
		from
		procurements.mou) a inner join (select id,name as vendor_name from
		procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.vendor_accepted=f.empid
		where a.id=#{mouid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>

	<select id="getTotalMOUCEOData" resultType="java.util.Map">
		select distinct
		a.id,a.mou_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,mou_id,
		date_created,created_by,approved_by,vendor_accepted,amount,status,vendor
		from
		procurements.mou) a inner join (select id,name as vendor_name from
		procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.vendor_accepted=f.empid
		where a.id=#{mouid} and a.vendor=#{vendor_id}
		and a.status=1

	</select>


	<select id="getTotalMOUApprovedData" resultType="java.util.Map">
		select distinct
		a.id,a.mou_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,mou_id,
		date_created,created_by,approved_by,vendor_accepted,amount,status,vendor
		from
		procurements.mou) a inner join (select id,name as vendor_name from
		procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.vendor_accepted=f.empid
		where a.id=#{mouid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>

	<select id="getTotalMOUHoldData" resultType="java.util.Map">
		select distinct
		a.id,a.mou_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,mou_id,
		date_created,created_by,approved_by,vendor_accepted,amount,status,vendor
		from
		procurements.mou) a inner join (select id,name as vendor_name from
		procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.vendor_accepted=f.empid
		where a.id=#{mouid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>

	<select id="getTotalMOUReturnedData" resultType="java.util.Map">
		select distinct
		a.id,a.mou_id,a.date_created::date,e.created_by,d.modified_by,f.next_approver,a.amount,b.vendor_name,c.status
		from(select id,mou_id,
		date_created,created_by,approved_by,vendor_accepted,amount,status,vendor
		from
		procurements.mou) a inner join (select id,name as vendor_name from
		procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name as status from
		finance.invoice_status)c
		on a.status=c.invoice_status left join
		(select empid,concat(first_name,'
		',last_name) as modified_by from
		hrms.employee_personal_details)d on
		a.approved_by=d.empid
		left join (select empid,concat(first_name,'
		',last_name) as created_by from
		hrms.employee_personal_details)e on
		a.created_by=e.empid
		left join (select empid,concat(first_name,' ',last_name)
		as next_approver
		from hrms.employee_personal_details)f on
		a.vendor_accepted=f.empid
		where a.id=#{mouid} and a.vendor=#{vendor_id}
		and a.status=1
	</select>    
<!-- 
	<select id="getAllOrders" resultType="map">
		select id as order_id,order_name from finance.order_type_mst;
	</select>
	<select id="getInvoicevsPaymentsReport" resultType="Finance"
		parameterType="map">
		select
		a.id,a.voucher_id,a.date_created,d.modified_by,a.amount,b.vendor_name,e.invoice_name,g.paid_amount,c.invoice_booked_date,h.order_name
		from(select
		id,voucher_id,order_type,date_created::date,created_by,modified_by,status,vendor,amount
		from
		finance.accounts_payable) a inner join (select id,name as vendor_name from finance.vendor)b on
		a.vendor=b.id inner join
		(select id,invoice_status,invoice_name from finance.invoice_status)e on
		a.status=e.invoice_status left join
		(select accounts_payable,status=7,date_created::date as invoice_booked_date
		from finance.invoice_status_history)c on a.id=c.accounts_payable left
		join
		(select id,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.id
		left join (select accounts_payable,entry_type=2,paid_amount from
		finance.journal_payables)g on a.id=g.accounts_payable
		left join (select id as order_id,order_name from finance.order_type_mst)h
		on a.order_type=h.order_id
		where a.order_type=#{p.order_id} and a.date_created>=#{p.from_date} and
		#{p.to_date}>=a.date_created


	</select>
 -->

           <!-- Balancesheet Report -->
	
	
	<!-- Balancesheet Report -->
	<select id="getAssetReport1" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=2 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=2 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getAssetReport2" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getAssetReport3" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getAssetReport4" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getAssetReport5" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=17 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=17 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getAssetReport6" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=18 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=18 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getAssetReport7" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=19 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=19 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getAssetReport8" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getAssetReport9" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=12 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=12 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getAssetReport10" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=13 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=13 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getAssetReport11" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=35 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=35 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getEquityReport1" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=20 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=20 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getEquityReport2" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=21 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=21 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getEquityReport3" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=22 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=22 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getEquityReport4" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id   
		where a.gl_group=23 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=23 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getEquityReport5" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=24 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=24 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getEquityReport6" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=25 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=25 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getGLAsset" resultType="Finance" parameterType="map">
		
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLAsset1" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLAsset2" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLAsset3" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLAsset4" resultType="Finance"
		parameterType="map">
		
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLAsset5" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLAsset6" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLEquity" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLEquity1" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLEquity2" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLEquity3" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLEquity4" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getGLEquity5" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getGLAssetDetails" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetails1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetails2" resultType="java.util.Map">
	select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetails3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetails4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetails5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetails6" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetails" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetails1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetails2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetails3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetails4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetails5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>


<!-- PREVIOUS -->

<select id="getGLAssetDetailsPrevious" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetailsPrevious1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetailsPrevious2" resultType="java.util.Map">
	select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetailsPrevious3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetailsPrevious4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetailsPrevious5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAssetDetailsPrevious6" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetailsPrevious" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetailsPrevious1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetailsPrevious2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetailsPrevious3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetailsPrevious4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLEquityDetailsPrevious5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<!-- MONTHLY BALANCE SHEET REPORT -->
	
	<select id="getMonthAssetReport1" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=2 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=2 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getMonthAssetReport2" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getMonthAssetReport3" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthAssetReport4" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthAssetReport5" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=17 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=17 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getMonthAssetReport6" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=18 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=18 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthAssetReport7" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=19 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=19 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id

	</select>
	<select id="getMonthAssetReport8" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getMonthAssetReport9" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=12 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=12 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthAssetReport10" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=13 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=13 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getMonthAssetReport11" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=35 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=35 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getMonthEquityReport1" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=20 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=20 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getMonthEquityReport2" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=21 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=21 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getMonthEquityReport3" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=22 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=22 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getMonthEquityReport4" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=23 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=23 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getMonthEquityReport5" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=24 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=24 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getMonthEquityReport6" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=25 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=25 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id

	</select>

	<select id="getMonthGLAsset" resultType="Finance" parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLAsset1" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLAsset2" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLAsset3" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLAsset4" resultType="Finance"
		parameterType="map">
			
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLAsset5" resultType="Finance"
		parameterType="map">
			
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLAsset6" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLEquity" resultType="Finance"
		parameterType="map">
			
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLEquity1" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLEquity2" resultType="Finance"
		parameterType="map">
			
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLEquity3" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLEquity4" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	<select id="getMonthGLEquity5" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getMonthGLAssetDetails" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetails1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetails2" resultType="java.util.Map">
	select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetails3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetails4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetails5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetails6" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetails" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetails1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetails2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetails3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetails4" resultType="java.util.Map">
	select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetails5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>


<!-- PREVIOUS -->

<select id="getMonthGLAssetDetailsPrevious" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetailsPrevious1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetailsPrevious2" resultType="java.util.Map">
	select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetailsPrevious3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetailsPrevious4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetailsPrevious5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAssetDetailsPrevious6" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetailsPrevious" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetailsPrevious1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetailsPrevious2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetailsPrevious3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetailsPrevious4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLEquityDetailsPrevious5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>
	
	
	
	
	
	
	
	
	
<!--  Cashflow Report -->


	<!-- Cashflow Report -->
	<select id="getCashFlowReport1" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport2" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport3" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=37 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=37 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport4" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=38 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=38 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport5" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport6" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport7" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport8" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport9" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=29 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=29 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport10" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=36 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=36 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport11" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=33 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=33 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport12" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getCashFlowReport13" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	
	
		<!--Monthly Cashflow Report -->
	<select id="getMonthCashFlowReport1" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport2" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport3" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=37 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=37 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport4" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=38 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=38 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport5" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=10 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport6" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=15 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport7" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport8" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=16 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport9" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=29 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=29 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport10" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=36 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=36 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport11" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=33 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=33 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport12" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthCashFlowReport13" resultType="java.util.Map">
select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner     
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=11 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>





	
<!-- HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH -->	



           


<!-- VENDOR ACCOUNT BALANCE -->
	
	<select id="getFinancialYear" resultType="map">
		SELECT id as
		financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst;
	</select>       
	<select id="getVendorAccountBalance"
		parameterType="java.lang.Integer" resultType="map">
		select distinct
		g.vendor_name,g.mobile_number,g.email,g.state,g.booked_amount,h.paid_amount
		from (select distinct
		a.vendor_name,a.mobile_number ,a.email,b.state,sum(case when c.status=7
		then f.amount end) as booked_amount from(select id,name as
		vendor_name,mobile as mobile_number,email,
		state from procurements.vendors)a inner join
		(select id,name as state from
		finance.states)b on a.state=b.id inner
		join (select id,status,vendor
		from finance.accounts_payable)c on
		a.id=c.vendor inner join (select
		id,journal_entry_header,accounts_payable from
		finance.journal_payables)d
		on c.id=d.accounts_payable inner join(select
		id,financial_year from
		finance.journal_entry_header)e on
		d.journal_entry_header=e.id
		inner join(select
		id,journal_entry_header,amount from
		finance.journal_entry_details)f on
		e.id=f.journal_entry_header where
		e.financial_year=#{financial_year} group by
		a.vendor_name,a.mobile_number,a.email,b.state)g inner join
		(select
		distinct a.vendor_name,a.mobile_number,a.email,b.state,sum(case when
		c.status in (8,9)
		then f.amount end) as paid_amount from(select id,name
		as
		vendor_name,mobile as mobile_number,email,
		state from procurements.vendors)a inner
		join (select id,name as state from
		finance.states)b on a.state=b.id
		inner join (select id,status,vendor
		from finance.accounts_payable)c on
		a.id=c.vendor inner join (select
		id,journal_entry_header,accounts_payable from
		finance.journal_payables)d
		on c.id=d.accounts_payable inner join(select
		id,financial_year from
		finance.journal_entry_header)e on
		d.journal_entry_header=e.id
		inner join(select
		id,journal_entry_header,amount from
		finance.journal_entry_details)f on
		e.id=f.journal_entry_header where
		e.financial_year=#{financial_year} group by
		a.vendor_name,a.mobile_number,a.email,b.state)h on
		g.vendor_name=h.vendor_name

	</select>

	
	<!--  BANK RECONCILIATION REPORT -->
	<select id="getAllBankAccounts" resultType="map">
		select
		id,account_name from finance.gl_group_accounts_mst where gl_group=14
		and gl_sub_group=5;
	</select>
	
	<select id="getBankDetails" resultType="Finance"
		parameterType="map">
		select distinct a.id,a.ref_no as cheque_no,a.payment_date as
		cheque_date,a.bank_date,a.amount,(case when b.account_type=0 then
		'credit' when b.account_type=1
		then 'debit' end) as account_type,(case
		when a.empid='' and a.customer=0
		and a.vendor !=0 then e.name   
		when
		a.empid!='0' and a.customer=0 and a.vendor =0 then f.employeename
		when a.empid='0' and a.customer!=0 and a.vendor =0 then g.name end)
		as vendor_name
		from   
		(select distinct
		id,bank_gl_account,vendor,bank_date,empid,customer,ref_no,payment_date,amount
		from finance.payments)a inner join (select distinct id,account_name
		from finance.gl_group_accounts_mst)c on a.bank_gl_account=c.id inner
		join (select journal_entry_header,payments from
		finance.payment_details)d
		on a.id=d.payments inner join
		(select distinct   
		id,account_type,journal_entry_header from
		finance.journal_entry_details)b on
		b.journal_entry_header=d.journal_entry_header
		left join (select id,name
		from procurements.vendors)e on a.vendor=e.id left
		join(select
		empid,concat(first_name,' ',last_name) as employeename from
		hrms.employee_personal_details)f on a.empid=f.empid left join(select
		id,name from finance.customer)g on a.customer=g.id where c.id=#{p.id}
		and a.payment_date>=#{p.from_date} and #{p.to_date}>=a.payment_date
	</select>

	<update id="updateBankDetails" parameterType="map">
		update
		finance.payments SET bank_date = #{p.bank_date}::date
		WHERE
		id=#{p.id};
	</update>
	<select id="getByBankDetails" resultType="Finance">
		select
		id,vendor,employee,bank_gl_account,amount,ref_no,description,payment_date,signature_one,signature_two,created_by,customer,gl_account,amount_type,diff_amount,bank_date
		from
		finance.payments where id=#{id}
	</select>
<!--  DISPLAY ACCOUNT BALANCE -->

	<select id="getAllDisplayGLAccount" resultType="map">
		select
		id,account_name from finance.gl_group_accounts_mst;
	</select>
	<select id="getDisplayAccountBalance" resultType="Finance"
		parameterType="map">
		select distinct
		a.account_name,b.date,b.description,b.voucher_number,c.account_types,d.name,(case
		when c.account_type=0 then b.credit_amount end) as
		credit_amount,c.credit_amount,c.debit_amount from
		(select
		id,account_name from finance.gl_group_accounts_mst)a inner
		join(select
		id,journal_entry_header,gl_account,account_type,(case when
		account_type=0 then 'Credit' when account_type=1 then 'Debit' end) as
		account_types,(case when account_type=0 then amount end) as
		credit_amount,(case when account_type=1 then amount end) as
		debit_amount
		from finance.journal_entry_details)c on a.id=c.gl_account
		inner join
		(select
		id,voucher_number,date,description,entry_type,credit_amount,debit_amount
		from
		finance.journal_entry_header)b on b.id=c.journal_entry_header
		inner join (select id,name,entry_type
		from
		finance.journal_entry_type_mst)d
		on d.entry_type=b.entry_type where
		b.date>=#{p.from_date} and
		#{p.to_date}>=b.date and a.id=#{p.id}
	</select>
	
<select id="getHeaderDetails" resultType="java.util.Map">

		select distinct
		a.voucher_number,a.date,b.project,c.program,d.name as
		entry_type,e.voucher_id,e.workorder,(case when e.order_type=0 then
		g.workorder_id
		when e.order_type=1 then h.purchaseorder_id
		when
		e.order_type=2 then i.mou_id end) as workorder_name from
		(select
		id,voucher_number,date,entry_type,program,project from
		finance.journal_entry_header)a inner join (select id,project_name as project
		from
		procurements.createproject_mst)b on a.project=b.id inner join(select id,program_name as
		program from
		procurements.createprogram_mst)c on a.program=c.id inner join
		(select
		id,name,entry_type from finance.journal_entry_type_mst)d on
		a.entry_type=d.entry_type inner join (select id,journal_entry_header,
		accounts_payable from finance.journal_payables)f on
		a.id=f.journal_entry_header inner join(select
		id,voucher_id,order_type,workorder,purchase_order,mou
		from
		finance.accounts_payable)e on f.accounts_payable=e.id left join
		(select id,workorder_id from finance.workorder)g on g.id=e.workorder
		left join (select id,purchaseorder_id from procurements.purchase_order)h on
		h.id=e.purchase_order left join (select id,mou_id from procurements.mou)i
		on i.id=e.mou where a.voucher_number=#{voucher_number}::character varying
	</select>

	<select id="getEntryDetails" resultType="java.util.Map">
		select distinct
		a.ref_date,a.account_type,a.credit_amount,a.debit_amount,a.credit_total,a.debit_total,a.description,b.account_name
		as gl_account_name,c.cost_center,d.voucher_number from
		(select
		id,journal_entry_header,gl_account,
		cost_center,ref_date,account_type,(case when account_type=0 then
		amount end) as credit_amount,(case when account_type=0 then
		sum(amount) end) as credit_total,(case when account_type=1 then amount
		end) as debit_amount,
		(case when account_type=1 then sum(amount) end)
		as debit_total,description
		from finance.journal_entry_details group by
		id,journal_entry_header,gl_account,
		cost_center,ref_date,account_type,credit_amount,debit_amount,description)a
		inner join
		(select id,account_name from finance.gl_group_accounts_mst)b
		on
		a.gl_account=b.id inner join(select id,name as cost_center from
		hrms.cost_center_mst)c on
		a.cost_center=c.id inner join (select
		id,voucher_number from
		finance.journal_entry_header)d on
		a.journal_entry_header=d.id
		where d.voucher_number=#{voucher_number}::character varying  
	</select>
	   
<!-- INVOICE VS PAYMENTS -->
		<select id="getAllOrders" resultType="map">
			select id as
			order_id,order_name from finance.order_type_mst;
		</select>

		<select id="getInvoicevsPaymentsReport" resultType="Finance"
		parameterType="map">
		select
		a.id,a.voucher_id,a.date_created,d.modified_by,a.amount,b.vendor_name,e.invoice_name,g.paid_amount,c.invoice_booked_date,h.order_name
		from(select
		id,voucher_id,order_type,date_created::date,created_by,modified_by,status,vendor,amount
		from
		finance.accounts_payable) a inner join (select id,name as
		vendor_name from procurements.vendors)b on
		a.vendor=b.id inner join
		(select
		id,invoice_status,invoice_name from finance.invoice_status)e on
		a.status=e.invoice_status left join
		(select
		accounts_payable,status=7,date_created::date as invoice_booked_date
		from finance.invoice_status_history)c on a.id=c.accounts_payable left
		join
		(select empid,concat(first_name,' ',last_name) as modified_by from
		hrms.employee_personal_details)d on a.modified_by=d.empid
		left join
		(select accounts_payable,entry_type=2,paid_amount from
		finance.journal_payables)g on a.id=g.accounts_payable
		left join (select     
		id as order_id,order_name from finance.order_type_mst)h
		on
		a.order_type=h.order_id
		where a.order_type=#{p.order_id} and
		a.date_created>=#{p.from_date} and
		#{p.to_date}>=a.date_created


	</select>
		
		<!-- INCOME AND EXPENDITURE REPORT -->
		
			<!-- Income And Expenditure Report -->
	<select id="getIncomeAccounts" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=4 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=4 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getIncomeoneAccounts" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getExpenditureAccounts" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=6 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=6 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getExpenditureAccounts1" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=7 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=7 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getExpenditureAccounts2" resultType="java.util.Map">
		select distinct
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=8 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=8 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getGLAccountNames" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 

	</select>

	<select id="getGLAccountTwoNames" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getGLExpAccountNames" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getGLExpAccountOneNames" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getGLExpAccountTwoNames" resultType="Finance"
		parameterType="map">
				
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getGLAccountDetails" resultType="java.util.Map">   
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>
	<select id="getGLAccountDetails1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetails2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetails3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetails4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetails5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>
	
	
	<!-- PREVIOUS -->
	
	<select id="getGLAccountDetailsPrevious" resultType="java.util.Map">   
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>
	<select id="getGLAccountDetailsPrevious1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetailsPrevious2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetailsPrevious3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetailsPrevious4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>

	<select id="getGLAccountDetailsPrevious5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount,d.from_date,d.to_date   from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and d.financial_year=#{previous_financial_year} group by a.id,a.account_name,d.from_date,d.to_date 
	</select>


	<select id="getDepreciationDetails" resultType="java.util.Map">
		select
		k.amount,k.group_id,k.group_name,k.financial_year,l.previous_financial_year,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name,d.financial_year from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		c.financial_year=#{financial_year} group by
		e.group_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as previous_amount,d.financial_year as
		previous_financial_year,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		c.financial_year=#{previous_financial_year} group by
		d.financial_year,e.group_id
		)l on k.group_id=l.group_id
	</select>

	<select id="getDepreciationAccountNames" resultType="Finance"
		parameterType="map">
	
select distinct
		 amount,k.id,k.account_name, l.previous_amount,k.financial_year
		from (select sum(b.amount) as amount,d.financial_year
		,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.financial_year} group by a.id,a.account_name,e.group_id,d.financial_year)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and
		d.financial_year=#{p.previous_financial_year} group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	
	<select id="getMonthIncomeAccounts" resultType="java.util.Map">
		
		select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=4 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=4 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	   </select>   
	
	
	<select id="getMonthIncomeoneAccounts" resultType="java.util.Map">
				select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=5 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	
	<select id="getMonthExpenditureAccounts" resultType="java.util.Map">
				select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=6 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=6 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	
	<select id="getMonthExpenditureAccounts1" resultType="java.util.Map">
				select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=7 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=7 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	<select id="getMonthExpenditureAccounts2" resultType="java.util.Map">
			select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=8 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=8 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	
	
	<select id="getMonthDepreciationDetails" resultType="java.util.Map">
					select distinct
		k.amount,k.group_id,k.group_name,l.previous_amount
		from(select sum(b.amount) as
		amount,e.group_id,e.group_name from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		 c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by
		e.group_name,e.group_id)k left join

		(select sum(b.amount) as previous_amount,e.group_id from
		(select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner
		join(select    
		id,gl_account,amount,journal_entry_header,account_type
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where a.gl_group=9 and
		 c.date::date >= #{previous_from_date}::date and #{previous_to_date}::date >=c.date::date group by e.group_id
		)l on k.group_id=l.group_id
	</select>
	
	<select id="getMonthGLAccountNames" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 

	</select>
	
	<select id="getMonthGLAccountTwoNames" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getMonthGLExpAccountNames" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getMonthGLExpAccountOneNames" resultType="Finance"
		parameterType="map">
			
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>

	<select id="getMonthGLExpAccountTwoNames" resultType="Finance"
		parameterType="map">
			
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	
<select id="getMonthDepreciationAccountNames" resultType="Finance"
		parameterType="map">
		
select distinct
		 amount,k.id,k.account_name,l.previous_amount
		from (select sum(b.amount) as amount,a.id,a.account_name,e.group_id  from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.from_date} and #{p.to_date} >=c.date
		 group by a.id,a.account_name,e.group_id)k left join

		(select sum(b.amount) as
		previous_amount,a.id,a.account_name,e.group_id from (select
		id,account_name,gl_group from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header,account_type,(case when
		account_type=0 then amount end) as credit_amount,
		(case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner
		join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date >= #{p.previous_from_date} and #{p.previous_to_date} >=c.date group by a.id,a.account_name,e.group_id)l on k.id=l.id 
	</select>
	
	
	<select id="getMonthGLAccountDetails" resultType="java.util.Map">   
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>
	<select id="getMonthGLAccountDetails1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAccountDetails2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAccountDetails3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>     

	<select id="getMonthGLAccountDetails4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAccountDetails5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{from_date} and #{to_date} >=c.date  group by a.id,a.account_name
	</select>
	
	
	<!-- PREVIOUS -->
	
	<select id="getMonthGLAccountDetailsPrevious" resultType="java.util.Map">   
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>
	<select id="getMonthGLAccountDetailsPrevious1" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAccountDetailsPrevious2" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAccountDetailsPrevious3" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAccountDetailsPrevious4" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>

	<select id="getMonthGLAccountDetailsPrevious5" resultType="java.util.Map">
		select distinct 
		a.id,a.account_name, sum(b.amount) as previous_amount from (select
		id,account_name from
		finance.gl_group_accounts_mst)a
		inner join(select
		id,gl_account,amount,journal_entry_header from
		finance.journal_entry_details)b on a.id=b.gl_account 
		inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where a.id=#{id} and c.date >= #{previous_from_date} and #{previous_to_date} >=c.date  group by a.id,a.account_name
	</select>
	
	
	<!-- COST CENTER WISE REPORT -->
	
	<select id="getCostCenter" resultType="map">
		select id as cost_id,name
		as cost_center from hrms.cost_center_mst;
	</select>
	
	<select id="getCostCenterReport" resultType="Finance"
		parameterType="map">


		select distinct a.cost_id,a.cost_center,sum(b.amount) as
		amount,d.fy,d.financial_year
		from (select id as cost_id,name as
		cost_center from
		hrms.cost_center_mst)a inner join
		(select
		id,gl_account,journal_entry_header,cost_center,account_type,amount,description
		from finance.journal_entry_details
		)b on a.cost_id=b.cost_center inner
		join (select id,date,financial_year
		from finance.journal_entry_header)c
		on b.journal_entry_header=c.id
		inner join(select id as
		financial_year,name as fy,from_date,to_date
		from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		where
		a.cost_id=#{p.cost_id} and c.financial_year=#{p.financial_year} group
		by a.cost_center,a.cost_id,d.fy,d.financial_year

	</select>   
	
	
	
	<select id="getJournalVoucherDetails" resultType="map"
		parameterType="map">


		select distinct b.amount,b.description,c.voucher_number,c.date as
		voucher_date from
		(select id as cost_id,name as cost_center from
		hrms.cost_center_mst)a
		inner join
		(select
		id,gl_account,journal_entry_header,cost_center,account_type,amount,description
		from finance.journal_entry_details
		)b on a.cost_id=b.cost_center inner
		join (select
		id,date,voucher_number,financial_year
		from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join (select id,name as financial_year,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.id where a.cost_id=
		#{p.cost_id} and a.cost_id=#{p.cost_id} and
		c.financial_year=#{p.financial_year}
	</select>
	
	


<!-- TDS AND GST -->

	<select id="getTDSGLAccounts" resultType="map">
		select id,account_name
		from finance.gl_group_accounts_mst where id in(6,3054,3056);
	</select>

	<select id="getIGSTReport" resultType="Finance"
		parameterType="map">
		select distinct
		a.amount,d.account_name,e.vendor_name,e.gst_no,e.pan_no,f.voucher_number,f.date,h.name,
		(case when d.id=3056 then ((sum(a.amount)*2)/100) end) as
		tds_igst_amount,

		(case when d.id=3056 then
		ROUND(((sum(a.amount)*2)/100)+ (a.amount)) end)
		as gross_total

		from(select id,vendor,voucher_id,
		amount
		from finance.accounts_payable)a
		inner
		join(select
		id,vendor,tax_account
		from
		finance.vendor_tax_account_mapping)b
		on
		a.vendor=b.vendor left join
		(select id,account_type,gl_account from
		finance.tax_accounts)c on
		c.id=b.tax_account
		left join (select
		id,account_name from
		finance.gl_group_accounts_mst)d on
		d.id=c.gl_account inner join (select
		id,name as vendor_name,gst_no,pan_no from procurements.vendors)e on
		a.vendor=e.id
		inner join(select journal_entry_header,accounts_payable
		from
		finance.journal_payables)i on a.id=i.accounts_payable
		left join
		(select
		id,voucher_number,date,entry_type from
		finance.journal_entry_header)f
		on f.id=i.journal_entry_header left join
		(select id,name,entry_type
		from finance.journal_entry_type_mst)h on
		f.entry_type=h.entry_type
		where f.date >= #{p.from_date} and
		#{p.to_date}>=f.date and
		d.id=#{p.id} group by
		a.amount,d.account_name,e.vendor_name,e.gst_no,e.pan_no,f.voucher_number,f.date,h.name,d.id

	</select>
	<select id="getCGSTReport" resultType="Finance"
		parameterType="map">
		select distinct
		k.amount,k.vendor_name,k.gst_no,k.pan_no,k.voucher_number,k.date,k.name,k.tds_cgst_amount,l.tds_sgst_amount,ROUND(((k.amount)+(k.tds_cgst_amount)+(l.tds_sgst_amount)))
		as gross_total,k.id from (select
		a.amount,e.vendor_name,e.gst_no,d.id,e.pan_no,f.voucher_number,f.date,h.name,

		sum(case when d.id=3054 then (((a.amount)*1)/100) end) as
		tds_cgst_amount
		from(select id,vendor,voucher_id,
		amount
		from
		finance.accounts_payable)a inner join(select
		id,vendor,tax_account
		from
		finance.vendor_tax_account_mapping)b
		on
		a.vendor=b.vendor left join
		(select id,account_type,gl_account from
		finance.tax_accounts)c on
		c.id=b.tax_account
		left join (select
		id,account_name from
		finance.gl_group_accounts_mst)d on
		d.id=c.gl_account inner join (select
		id,name as vendor_name,gst_no,pan_no from procurements.vendors)e on
		a.vendor=e.id
		inner join(select journal_entry_header,accounts_payable
		from
		finance.journal_payables)i on a.id=i.accounts_payable
		left join
		(select
		id,voucher_number,date,entry_type from
		finance.journal_entry_header)f
		on f.id=i.journal_entry_header left join
		(select id,name,entry_type
		from finance.journal_entry_type_mst)h on
		f.entry_type=h.entry_type
		where d.id in (3054)
		group by
		e.vendor_name,e.gst_no,e.pan_no,f.voucher_number,f.date,h.name,d.id,a.amount,e.id)k
		left join

		(select
		a.amount,e.vendor_name,e.gst_no,e.pan_no,f.voucher_number,f.date,h.name,d.id,

		sum(case when d.id=3055 then (((a.amount)*1)/100) end) as
		tds_sgst_amount
		from(select id,vendor,voucher_id,
		amount
		from
		finance.accounts_payable)a inner join(select
		id,vendor,tax_account
		from
		finance.vendor_tax_account_mapping)b
		on
		a.vendor=b.vendor left join
		(select id,account_type,gl_account from
		finance.tax_accounts)c on
		c.id=b.tax_account
		left join (select
		id,account_name from
		finance.gl_group_accounts_mst)d on
		d.id=c.gl_account inner join (select
		id,name as vendor_name,gst_no,pan_no from procurements.vendors)e on
		a.vendor=e.id
		inner join(select journal_entry_header,accounts_payable
		from
		finance.journal_payables)i on a.id=i.accounts_payable
		left join
		(select
		id,voucher_number,date,entry_type from
		finance.journal_entry_header)f
		on f.id=i.journal_entry_header left join
		(select id,name,entry_type
		from finance.journal_entry_type_mst)h on
		f.entry_type=h.entry_type
		where d.id in (3055)
		group by
		e.vendor_name,e.gst_no,e.pan_no,f.voucher_number,f.date,h.name,d.id,a.amount)l
		on k.amount=l.amount where k.date>=#{p.from_date} and
		#{p.to_date}>=k.date and k.id=#{p.id}

	</select>
	<select id="get194JReport" resultType="Finance"
		parameterType="map">
		select distinct
		a.amount,d.account_name,e.vendor_name,e.pan_no,f.voucher_number,f.date,h.name,

		(case when d.id=6 then ((sum(a.amount)*7.5)/100) end) as tds_194j,

		(case when d.id=6 then ROUND(((sum(a.amount)*7.5)/100)+ (a.amount))
		end) as gross_total
		from(select id,vendor,voucher_id,
		amount
		from
		finance.accounts_payable)a inner join(select
		id,vendor,tax_account
		from
		finance.vendor_tax_account_mapping)b
		on
		a.vendor=b.vendor left join
		(select id,account_type,gl_account from
		finance.tax_accounts)c on
		c.id=b.tax_account
		left join (select
		id,account_name from
		finance.gl_group_accounts_mst)d on
		d.id=c.gl_account inner join (select
		id,name as vendor_name,gst_no,pan_no from procurements.vendors)e on
		a.vendor=e.id
		inner join(select journal_entry_header,accounts_payable
		from
		finance.journal_payables)i on a.id=i.accounts_payable
		left join
		(select
		id,voucher_number,date,entry_type from
		finance.journal_entry_header)f
		on f.id=i.journal_entry_header left join
		(select id,name,entry_type
		from finance.journal_entry_type_mst)h on
		f.entry_type=h.entry_type
		where f.date >= #{p.from_date} and
		#{p.to_date}>=f.date and
		d.id=#{p.id} group by
		a.amount,d.account_name,e.vendor_name,e.gst_no,e.pan_no,f.voucher_number,f.date,h.name,d.id

	</select>
	
	<!-- TRAIL BALANCE -->
	
	
		 	<!-- TRAIL BALANCE -->
		
		<select id="getTrailIncomeAccounts" resultType="java.util.Map">
	select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=4 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
		

		
	</select>
	
     <select id="getTrailIncomeoneAccounts" resultType="java.util.Map">
select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=5 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
		
	</select>
	<select id="getTrailExpenditureAccounts" resultType="java.util.Map">
	select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=6 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
		
	</select>
	<select id="getTrailExpenditureAccounts1" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=7 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year

		
	</select>
	<select id="getTrailExpenditureAccounts2" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=8 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year

		
	</select>
	<select id="getTrailGLAccountNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date

	</select>

	<select id="getTrailGLAccountTwoNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>

	<select id="getTrailGLExpAccountNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>

	<select id="getTrailGLExpAccountOneNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>

	<select id="getTrailGLExpAccountTwoNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		
	
	<select id="getTrailAssetReport1" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=2 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
		
	</select>
	
		<select id="getTrailAssetReport2" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=10 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailAssetReport3" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=15 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailAssetReport4" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=16 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailAssetReport5" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=17 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailAssetReport6" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=18 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailAssetReport7" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=19 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	<select id="getTrailAssetReport8" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=11 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	<select id="getTrailAssetReport9" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=12 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	<select id="getTrailAssetReport10" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=13 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailAssetReport11" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=35 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailEquityReport1" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=20 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailEquityReport2" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=21 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailEquityReport3" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=22 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailEquityReport4" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=23 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailEquityReport5" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=24 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	<select id="getTrailEquityReport6" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,k.financial_year,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,d.financial_year,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=25 and c.financial_year=#{financial_year} group by e.group_id,e.group_name,d.financial_year,b.account_type)k group by k.group_id,k.group_name,k.financial_year
	</select>
	
	<select id="getTrailGLAsset" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		<select id="getTrailGLAsset1" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		<select id="getTrailGLAsset2" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		<select id="getTrailGLAsset3" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		<select id="getTrailGLAsset4" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		<select id="getTrailGLAsset5" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		<select id="getTrailGLAsset6" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
		<select id="getTrailGLEquity" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
	<select id="getTrailGLEquity1" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
	<select id="getTrailGLEquity2" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
	<select id="getTrailGLEquity3" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
	<select id="getTrailGLEquity4" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
	<select id="getTrailGLEquity5" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount,k.from_date,k.to_date from (select b.amount ,a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount,d.from_date,d.to_date from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,amount,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and d.financial_year=#{p.financial_year})k group by k.id,k.account_name,k.from_date,k.to_date
	</select>
	
	<!--MONTHLY TRAIL BALANCE -->
		
		<select id="getMonthTrailIncomeAccounts" resultType="java.util.Map">
	select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=4 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name

		
	</select>
	
     <select id="getMonthTrailIncomeoneAccounts" resultType="java.util.Map">
select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=5 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
		
	</select>
	<select id="getMonthTrailExpenditureAccounts" resultType="java.util.Map">
	select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=6 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name

	</select>
	<select id="getMonthTrailExpenditureAccounts1" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=7 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name

		
	</select>
	<select id="getMonthTrailExpenditureAccounts2" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=8 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name

		
	</select>
	<select id="getMonthTrailGLAccountNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name

	</select>

	<select id="getMonthTrailGLAccountTwoNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>

	<select id="getMonthTrailGLExpAccountNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>

	<select id="getMonthTrailGLExpAccountOneNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>

	<select id="getMonthTrailGLExpAccountTwoNames" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		
	
	<select id="getMonthTrailAssetReport1" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=2 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
		<select id="getMonthTrailAssetReport2" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=10 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
		
	</select>
	
	<select id="getMonthTrailAssetReport3" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=15 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
		
	</select>
	
	<select id="getMonthTrailAssetReport4" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=16 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
		
	</select>
	
	<select id="getMonthTrailAssetReport5" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=17 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailAssetReport6" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=18 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailAssetReport7" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=19 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	<select id="getMonthTrailAssetReport8" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=11 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	<select id="getMonthTrailAssetReport9" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=12 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	<select id="getMonthTrailAssetReport10" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=13 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailAssetReport11" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=35 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailEquityReport1" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=20 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailEquityReport2" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=21 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailEquityReport3" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=22 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailEquityReport4" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=23 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailEquityReport5" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=24 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	<select id="getMonthTrailEquityReport6" resultType="java.util.Map">
		select distinct k.group_id,k.group_name,sum(k.credit_amount) as credit_amount,sum(k.debit_amount) as debit_amount from(select distinct e.group_id,e.group_name,(case when b.account_type=0 then sum(b.amount) end) as credit_amount, 
                (case when b.account_type=1 then sum(b.amount) end) as debit_amount from 
		(select id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,amount
		from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id 
		where a.gl_group=25 and c.date::date >= #{from_date}::date and #{to_date}::date >=c.date::date group by e.group_id,e.group_name,b.account_type)k group by k.group_id,k.group_name
	</select>
	
	<select id="getMonthTrailGLAsset" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		<select id="getMonthTrailGLAsset1" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		<select id="getMonthTrailGLAsset2" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		<select id="getMonthTrailGLAsset3" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		<select id="getMonthTrailGLAsset4" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		<select id="getMonthTrailGLAsset5" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		<select id="getMonthTrailGLAsset6" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
		<select id="getMonthTrailGLEquity" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
	<select id="getMonthTrailGLEquity1" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
	<select id="getMonthTrailGLEquity2" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
	<select id="getMonthTrailGLEquity3" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
	<select id="getMonthTrailGLEquity4" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
	
	<select id="getMonthTrailGLEquity5" resultType="Finance"
		parameterType="map">
		select distinct k.id,k.account_name,sum(k.credit_amount)as credit_amount,sum(k.debit_amount) as debit_amount from (select a.id,a.account_name,e.group_id,b.credit_amount,b.debit_amount from (select
		id,account_name,gl_group from finance.gl_group_accounts_mst)a
		inner join(select id,gl_account,journal_entry_header,account_type,(case when account_type=0 then amount end) as credit_amount, 
                (case when account_type=1 then amount end) as debit_amount from
		finance.journal_entry_details)b on a.id=b.gl_account inner join
		(select id,financial_year,voucher_number,date from
		finance.journal_entry_header)c on b.journal_entry_header=c.id inner
		join
		(select id as financial_year,name as fy,from_date,to_date from
		hrms.financial_year_mst)d on c.financial_year=d.financial_year
		inner join (select id as group_id,group_name from finance.gl_group_mst)e on
		a.gl_group=e.group_id
		where e.group_id=#{p.group_id} and c.date::date >= #{p.from_date}::date and #{p.to_date}::date >=c.date::date)k group by k.id,k.account_name
	</select>
		
	
	
	    
	
	

</mapper>